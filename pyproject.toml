[tool.poetry]
name = "MITx Online"
version = "0.69.1"
description = "MITx Online"
license = "BSD-3"
readme = "README.md"
packages = []
authors  = ["MIT ODL"]
package-mode = false
requires-poetry = ">2.1,<3"


[tool.poetry.dependencies]
python = "^3.10"

beautifulsoup4 = "^4.8.2"
bleach = "^5.0.1"
boto3 = "^1.16.63"
celery = "^5.2.2"
celery-redbeat = "^2.0.0"
click = ">=8.1,!=8.2.0"
deepdiff = "^8.0.0"
dj-database-url = "^0.5.0"
django = "4.2.24"
django-anymail = {extras = ["mailgun"], version = "^11.1"}
django-cors-headers = "^4.0.0"
django-countries = "^7.2.1"
django-filter = "^24.3"
django-health-check = { git = "https://github.com/revsys/django-health-check", rev="9cfe2eaec5a15219513a36210b34875c03c64fe4" }  # pragma: allowlist secret
django-hijack = "^3.6.0"
django-ipware = "^7.0.0"
django-oauth-toolkit = "^1.7.0"
django-redis = "^5.0.0"
django-reversion = "^5.1.0"
django-robots = "6.1"
django-storages = "^1.11.1"
django-treebeard = "^4.5.1"
django-user-agents = "^0.4.0"
django-viewflow = "^2.2.7"
django-webpack-loader = "^3.0.0"
djangorestframework = "^3.12.4"
djoser = "^2.1.0"
drf-extensions = "^0.7.1"
drf-spectacular = "^0.28.0"
edx-api-client = "^1.12.0"
hubspot-api-client = "^6.1.0"
hypothesis = "4.23.9"
ipython = "^8.0.0"
mitol-django-apigateway = "2025.8.7"
mitol-django-authentication = "^2025.2.12"
mitol-django-common = ">=2025.5.23"
mitol-django-hubspot-api = "2023.12.19"
mitol-django-mail = "2023.12.19"
mitol-django-olposthog = "^2024.5.14"
mitol-django-openedx = "2023.12.19"
mitol-django-payment-gateway = "2023.12.19"
mitol-django-scim = ">=2025.5.23"
newrelic = "^6.4.1.158"
opentelemetry-api = ">=1.31.0"
opentelemetry-exporter-otlp = ">=1.31.0"
opentelemetry-instrumentation-celery = ">=0.52b0"
opentelemetry-instrumentation-django = ">=0.52b0"
opentelemetry-instrumentation-psycopg = ">=0.52b0"
opentelemetry-instrumentation-redis = ">=0.52b0"
opentelemetry-instrumentation-requests = ">=0.52b0"
opentelemetry-sdk = ">=1.31.0"
posthog = "^3.0.1"
psycopg = "^3.2.4"
psycopg2 = "^2.9.5"
pyOpenSSL = "^23.1.1"
pycountry = "^24.6.1"
pyparsing = "^3.2"
redis = "^5.0.0"
requests = "^2.28.2"
rich = "^14.0.0"
sentry-sdk = "^2.29.1"
social-auth-app-django = "5.4.3"
ulid-py = "^1.1.0"
user-util = "^0.1.5"
uwsgi = "^2.0.19"
uwsgitop = "^0.12"
wagtail = "7.0.1"
wagtail-metadata = "^5.0.0"
djangorestframework-api-key = "^3.1.0"
setuptools = "<80.9"
mitol-django-google-sheets = "^2025.6.13"
mitol-django-google-sheets-deferrals = "^2025.3.17"
mitol-django-google-sheets-refunds = "^2025.6.13"
pytest-lazy-fixtures = "^1.1.4"
tabulate = "^0.9.0"
python-redis-lock = "^4.0.0"
django-object-actions = "^5.0.0"
requests-oauthlib = "^2.0.0"
authlib = "^1.6.3"
trino = "^0.336.0"


[tool.poetry.group.dev.dependencies]
bpython = "^0.25"
ddt = "^1.6.0"
django-debug-toolbar = "^4.1.0"
factory-boy = "^3.2.0"
faker = "^8.8.2"
flaky = "^3.7.0"
freezegun = "^1.2"
ipdb = "^0.13.13"
nplusone = "^1.0.0"
pdbpp = "^0.11.6"
pre-commit = "^3.7.0"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-env = "^0.8.0"
pytest-mock = "^3.11.1"
responses = "^0.25.0"
ruff = "^0.9"
semantic-version = "^2.10.0"
wagtail-factories = "^4.2"
pytest-xdist = {extras = ["psutil"], version = "^3.6.1"}

[tool.ruff]
target-version = "py310"
line-length = 88
extend-exclude = ["b2b/keycloak_admin_dataclasses.py"]

[tool.ruff.lint]
select = [
    "A",  # flake8-builtins
    # "AIR",  # Airflow
    # "ANN",  # flake8-annotations
    "ARG",  # flake8-unused-arguments
    # "ASYNC",  # flake8-async
    "B",  # flake8-bugbear
    "BLE",  # flake8-blind-except
    "C4",  # flake8-comprehensions
    "C90",  # mccabe
    # "COM",  # flake8-commas
    # "CPY",  # flake8-copyright
    "D",  # pydocstyle
    "DJ",  # flake8-django
    "DTZ",  # flake8-datetimez
    "E",  # Pycodestyle Error
    "EM",  # flake8-errmsg
    "ERA",  # eradicate
    "EXE",  # flake8-executable
    "F",  # Pyflakes
    "FA",  # flake8-future-annotations
    "FBT",  # flake8-boolean-trap
    "FIX",  # flake8-fixme
    "FLY",  # flynt
    # "FURB",  # refurb
    "G",  # flake8-logging-format
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "INT",  # flake8-gettext
    "ISC",  # flake8-implicit-str-concat
    "N",  # pep8-naming
    # "NPY",  # NumPy-specific rules
    # "PD",  # pandas-vet
    "PERF",  # Perflint
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # Pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "S",  # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "TCH",  # flake8-type-checking
    "TD",  # flake8-todos
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Pycodestyle Warning
    "YTT",  # flake8-2020
]
ignore = [
    "A003",
    "B008",
    "B905",
    "COM812",
    "COM819",
    "D104",
    "D105",
    "D106",
    "D107",
    "D200",
    "D202",
    "D205",
    "D206",
    "D300",
    "D301",
    "D400",
    "D401",
    "E111",
    "E114",
    "E117",
    "E501",
    "INP001",
    "ISC001",
    "ISC001",
    "ISC002",
    "N803",
    "N806",
    "N999",
    "PIE804",
    "PLR0912",
    "PT023",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "RUF012",
    "TRY003",
    "UP007",
    "W191"
]
fixable = ["ALL"]

typing-modules = ["colour.hints"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.per-file-ignores]
"*_test.py" = ["ARG001", "E501", "S101", "PLR2004"]
"test_*.py" = ["ARG001", "E501", "S101", "PLR2004"]
"**/migrations/**" = ["ARG001", "D101", "D100"]
