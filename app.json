{
  "addons": [
    "heroku-postgresql:hobby-dev",
    "newrelic:wayne",
    "rediscloud:30"
  ],
  "buildpacks": [
    {
      "url": "https://github.com/heroku/heroku-buildpack-apt"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nodejs"
    },
    {
      "url": "https://github.com/moneymeets/python-poetry-buildpack"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-python"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-pgbouncer"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nginx"
    }
  ],
  "description": "MITx Online",
  "env": {
    "AUTH_CHANGE_EMAIL_TTL_IN_MINUTES": {
      "description": "Expiry time for a change email request, default is 1440 minutes(1 day)",
      "required": false
    },
    "AWS_ACCESS_KEY_ID": {
      "description": "AWS Access Key for S3 storage.",
      "required": false
    },
    "AWS_QUERYSTRING_AUTH": {
      "description": "Enables querystring auth for S3 urls",
      "required": false
    },
    "AWS_S3_FILE_OVERWRITE": {
      "description": "Django Storages setting. By default files with the same name will overwrite each other. Set this to False to have extra characters appended.",
      "required": false
    },
    "AWS_SECRET_ACCESS_KEY": {
      "description": "AWS Secret Key for S3 storage.",
      "required": false
    },
    "AWS_STORAGE_BUCKET_NAME": {
      "description": "S3 Bucket name.",
      "required": false
    },
    "CELERY_BROKER_URL": {
      "description": "Where celery should get tasks, default is Redis URL",
      "required": false
    },
    "CELERY_RESULT_BACKEND": {
      "description": "Where celery should put task results, default is Redis URL",
      "required": false
    },
    "CELERY_TASK_EAGER_PROPAGATES": {
      "description": "Early executed tasks propagate exceptions",
      "required": false
    },
    "CERTIFICATE_CREATION_WINDOW_IN_DAYS": {
      "description": "The number of days a course run is eligible for certificate creation after it ends.",
      "required": false
    },
    "CLOUDFRONT_DIST": {
      "description": "The Cloundfront distribution to use for static assets",
      "required": false
    },
    "CORS_ALLOWED_ORIGINS": {
      "description": "Comma separated string of trusted domains that should be allowed for CORS",
      "required": false
    },
    "CORS_ALLOW_CREDENTIALS": {
      "description": "Allow cookies to be sent in cross-site HTTP requests",
      "required": false
    },
    "CRON_COURSERUN_SYNC_DAYS": {
      "description": "day_of_week' value for scheduled task to sync course run data (by default, it will run each day of the week).",
      "required": false
    },
    "CRON_COURSERUN_SYNC_HOURS": {
      "description": "'hours' value for scheduled task to sync course run data (by default, it will run at midnight",
      "required": false
    },
    "CRON_COURSE_CERTIFICATES_DAYS": {
      "description": "'day_of_week' value for 'generate-course-certificate' scheduled task (default will run once a day).",
      "required": false
    },
    "CRON_COURSE_CERTIFICATES_HOURS": {
      "description": "'hours' value for the 'generate-course-certificate' scheduled task (defaults to midnight)",
      "required": false
    },
    "CRON_ORPHAN_CHECK_DAYS": {
      "description": "'day_of_week' value for 'check-for-program-orphans' scheduled task (default will run once a day).",
      "required": false
    },
    "CRON_ORPHAN_CHECK_HOURS": {
      "description": "'hours' value for 'check-for-program-orphans' scheduled task (default will run at 3 AM).",
      "required": false
    },
    "CRON_PROCESS_REFUND_REQUESTS_MINUTES": {
      "description": "minute value for scheduled task to process refund requests",
      "required": false
    },
    "CSRF_TRUSTED_ORIGINS": {
      "description": "Comma separated string of trusted domains that should be CSRF exempt",
      "required": false
    },
    "DJANGO_LOG_LEVEL": {
      "description": "The log level for django",
      "required": false
    },
    "ECOMMERCE_DEFAULT_PAYMENT_GATEWAY": {
      "description": "The default payment gateway to use. Must match the value of the constant in the mitol.payment_gateway library.",
      "required": false
    },
    "EDX_API_CLIENT_TIMEOUT": {
      "description": "Timeout (in seconds) for requests made via the edX API client",
      "required": false
    },
    "EXPOSE_OIDC_LOGIN": {
      "description": "Expose the OIDC login functionality.",
      "required": false
    },
    "FASTLY_AUTH_TOKEN": {
      "description": "Optional token for the Fastly purge API.",
      "required": false
    },
    "FASTLY_URL": {
      "description": "The URL to the Fastly API.",
      "required": false
    },
    "GA_TRACKING_ID": {
      "description": "Google analytics tracking ID",
      "required": false
    },
    "GOOGLE_DOMAIN_VERIFICATION_TAG_VALUE": {
      "description": "The value of the meta tag used by Google to verify the owner of a domain (used for enabling push notifications)",
      "required": false
    },
    "GTM_TRACKING_ID": {
      "description": "Google Tag Manager container ID",
      "required": false
    },
    "HEROKU_APP_NAME": {
      "description": "The name of the review app",
      "required": false
    },
    "HOST_IP": {
      "description": "This server's host IP",
      "required": false
    },
    "HUBSPOT_HOME_PAGE_FORM_GUID": {
      "description": "Hubspot ID for the home page contact form",
      "required": false
    },
    "HUBSPOT_MAX_CONCURRENT_TASKS": {
      "description": "Max number of concurrent Hubspot tasks to run",
      "required": false
    },
    "HUBSPOT_PIPELINE_ID": {
      "description": "Hubspot ID for the ecommerce pipeline",
      "required": false
    },
    "HUBSPOT_PORTAL_ID": {
      "description": "Hubspot Portal ID",
      "required": false
    },
    "HUBSPOT_TASK_DELAY": {
      "description": "Number of milliseconds to wait between consecutive Hubspot calls",
      "required": false
    },
    "KEYCLOAK_BASE_URL": {
      "description": "Base URL for the Keycloak instance.",
      "required": false
    },
    "KEYCLOAK_REALM_NAME": {
      "description": "Name of the realm the app uses in Keycloak.",
      "required": false
    },
    "LOGOUT_REDIRECT_URL": {
      "description": "Url to redirect to after logout, typically Open edX's own logout url",
      "required": false
    },
    "MAILGUN_BATCH_CHUNK_SIZE": {
      "description": "Maximum number of emails to send in a batch",
      "required": false
    },
    "MAILGUN_FROM_EMAIL": {
      "description": "Email which mail comes from",
      "required": false
    },
    "MAILGUN_KEY": {
      "description": "The token for authenticating against the Mailgun API",
      "required": true
    },
    "MAILGUN_SENDER_DOMAIN": {
      "description": "The domain to send mailgun email through",
      "required": true
    },
    "MEDIA_ROOT": {
      "description": "The root directory for locally stored media. Typically not used.",
      "required": false
    },
    "MITOL_AUTHENTICATION_FROM_EMAIL": {
      "description": "E-mail to use for the from field",
      "required": false
    },
    "MITOL_AUTHENTICATION_REPLY_TO_ADDRESS": {
      "description": "E-mail to use for reply-to address of emails",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_ADMIN_EMAILS": {
      "description": "This list of email addresses for the google service account authentication",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DATE_FORMAT": {
      "description": "Python strptime format for date columns (no time) in enrollment management spreadsheets",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DATE_TIMEZONE": {
      "description": "The name of the timezone that should be assumed for date/time values in spreadsheets. Choose from a value in the TZ database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DEFERRALS_COMPLETED_DATE_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains the row completion date",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DEFERRALS_ERROR_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains row processing error messages",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DEFERRALS_FIRST_ROW": {
      "description": "The first row (as it appears in the spreadsheet) of data that our scripts should consider processing in the deferral request spreadsheet",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DEFERRALS_PLUGINS": {
      "description": "The path to your deferral plugin, example: app.plugins.DeferralPlugin",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DEFERRALS_PROCESSOR_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains the user that processed the row",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DEFERRALS_REQUEST_WORKSHEET_ID": {
      "description": "ID of the worksheet within the enrollment change request spreadsheet that contains enrollment deferral requests",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DEFERRALS_SKIP_ROW_COL": {
      "description": "The zero-based index of the enrollment change sheet column that indicates whether the row should be skipped",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DRIVE_API_PROJECT_ID": {
      "description": "ID for the Google API project where the credentials were created",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DRIVE_CLIENT_ID": {
      "description": "Client ID from Google API credentials",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DRIVE_CLIENT_SECRET": {
      "description": "Client secret from Google API credentials",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DRIVE_SERVICE_ACCOUNT_CREDS": {
      "description": "The contents of the Service Account credentials JSON to use for Google API auth",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_DRIVE_SHARED_ID": {
      "description": "ID of the Shared Drive (a.k.a. Team Drive). This is equal to the top-level folder ID.",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_ENROLLMENT_CHANGE_SHEET_ID": {
      "description": "ID of the Google Sheet that contains the enrollment change request worksheets (refunds, transfers, etc)",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_GOOGLE_ACCOUNT_EMAIL_DOMAIN": {
      "description": "Email domain of the google service account",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_PROCESSOR_APP_NAME": {
      "description": "Name of the app processing the request",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_PROCESS_ONLY_LAST_ROWS_NUM": {
      "description": "Process only the last N rows of data. If set to 0 then process all rows. ",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_REFUNDS_COMPLETED_DATE_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains the row completion date",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_REFUNDS_ERROR_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains row processing error messages",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_REFUNDS_FIRST_ROW": {
      "description": "The first row (as it appears in the spreadsheet) of data that our scripts should consider processing in the refund request spreadsheet",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_REFUNDS_PLUGINS": {
      "description": "The path to your refund plugin, example: app.plugins.RefundPlugin",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_REFUNDS_PROCESSOR_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains the user that processed the row",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_REFUNDS_REQUEST_WORKSHEET_ID": {
      "description": "ID of the worksheet within the enrollment change request spreadsheet that contains enrollment refund requests",
      "required": false
    },
    "MITOL_GOOGLE_SHEETS_REFUNDS_SKIP_ROW_COL": {
      "description": "The zero-based index of the enrollment change sheet column that indicates whether the row should be skipped",
      "required": false
    },
    "MITOL_HUBSPOT_API_ID_PREFIX": {
      "description": "The prefix to use for hubspot unique_app_id field values",
      "required": false
    },
    "MITOL_HUBSPOT_API_PRIVATE_TOKEN": {
      "description": "Hubspot private token to authenticate with API",
      "required": false
    },
    "MITOL_HUBSPOT_API_RETRIES": {
      "description": "Number of times to retry a failed hubspot API request",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_ACCESS_KEY": {
      "description": "CyberSource access key",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_MERCHANT_ID": {
      "description": "CyberSource merchant ID",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_MERCHANT_SECRET": {
      "description": "CyberSource merchant secret key",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_MERCHANT_SECRET_KEY_ID": {
      "description": "CyberSource merchant secret key ID",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_PROFILE_ID": {
      "description": "CyberSource profile ID",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_REST_API_ENVIRONMENT": {
      "description": "CyberSource REST API Environment",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_SECURE_ACCEPTANCE_URL": {
      "description": "CyberSource secure acceptance URL",
      "required": false
    },
    "MITOL_PAYMENT_GATEWAY_CYBERSOURCE_SECURITY_KEY": {
      "description": "CyberSource security key",
      "required": false
    },
    "MITX_ONLINE_ADMIN_EMAIL": {
      "description": "E-mail to send 500 reports to.",
      "required": true
    },
    "MITX_ONLINE_BASE_URL": {
      "description": "Base url for the application in the format PROTOCOL://HOSTNAME[:PORT]",
      "required": true
    },
    "MITX_ONLINE_DB_CONN_MAX_AGE": {
      "description": "Maximum age of connection to Postgres in seconds",
      "required": false
    },
    "MITX_ONLINE_DB_DISABLE_SSL": {
      "description": "Disables SSL to postgres if set to True",
      "required": false
    },
    "MITX_ONLINE_DB_DISABLE_SS_CURSORS": {
      "description": "Disables Postgres server side cursors",
      "required": false
    },
    "MITX_ONLINE_EMAIL_BACKEND": {
      "description": "The default email backend to use for outgoing email. This is used in some places by django itself. See `NOTIFICATION_EMAIL_BACKEND` for the backend used for most application emails.",
      "required": false
    },
    "MITX_ONLINE_EMAIL_HOST": {
      "description": "Outgoing e-mail hostname",
      "required": false
    },
    "MITX_ONLINE_EMAIL_PASSWORD": {
      "description": "Outgoing e-mail auth password",
      "required": false
    },
    "MITX_ONLINE_EMAIL_PORT": {
      "description": "Outgoing e-mail port",
      "required": false
    },
    "MITX_ONLINE_EMAIL_TLS": {
      "description": "Outgoing e-mail TLS setting",
      "required": false
    },
    "MITX_ONLINE_EMAIL_USER": {
      "description": "Outgoing e-mail auth username",
      "required": false
    },
    "MITX_ONLINE_ENVIRONMENT": {
      "description": "The execution environment that the app is in (e.g. dev, staging, prod)",
      "required": true
    },
    "MITX_ONLINE_FROM_EMAIL": {
      "description": "E-mail to use for the from field",
      "required": false
    },
    "MITX_ONLINE_LOG_HOST": {
      "description": "Remote syslog server hostname",
      "required": false
    },
    "MITX_ONLINE_LOG_HOST_PORT": {
      "description": "Remote syslog server port",
      "required": false
    },
    "MITX_ONLINE_LOG_LEVEL": {
      "description": "The log level default",
      "required": false
    },
    "MITX_ONLINE_NOTIFICATION_EMAIL_BACKEND": {
      "description": "The email backend to use for application emails",
      "required": false
    },
    "MITX_ONLINE_REFINE_MITX_ONLINE_DATASOURCE": {
      "description": "open exchange app id for fetching currency exchange rate",
      "required": false
    },
    "MITX_ONLINE_REFINE_OIDC_CONFIG_AUTHORITY": {
      "description": "open exchange app id for fetching currency exchange rate",
      "required": false
    },
    "MITX_ONLINE_REFINE_OIDC_CONFIG_CLIENT_ID": {
      "description": "open exchange app id for fetching currency exchange rate",
      "required": false
    },
    "MITX_ONLINE_REFINE_OIDC_CONFIG_REDIRECT_URI": {
      "description": "Url to redirect the user to",
      "required": false
    },
    "MITX_ONLINE_REGISTRATION_ACCESS_TOKEN": {
      "description": "Access token to secure Open edX registration API with",
      "required": false
    },
    "MITX_ONLINE_REPLY_TO_ADDRESS": {
      "description": "E-mail to use for reply-to address of emails",
      "required": false
    },
    "MITX_ONLINE_SECURE_SSL_HOST": {
      "description": "Hostame to redirect non-secure requests to. Overrides value from HOST header.",
      "required": false
    },
    "MITX_ONLINE_SECURE_SSL_REDIRECT": {
      "description": "Application-level SSL redirect setting.",
      "required": false
    },
    "MITX_ONLINE_SITE_ID": {
      "description": "The default site id for django sites framework",
      "required": false
    },
    "MITX_ONLINE_SUPPORT_EMAIL": {
      "description": "Email address listed for customer support",
      "required": false
    },
    "MITX_ONLINE_USE_S3": {
      "description": "Use S3 for storage backend (required on Heroku)",
      "required": false
    },
    "NEW_RELIC_APP_NAME": {
      "description": "Application identifier in New Relic."
    },
    "NODE_MODULES_CACHE": {
      "description": "If false, disables the node_modules cache to fix yarn install",
      "value": "false"
    },
    "OAUTH2_PROVIDER_ALLOWED_REDIRECT_URI_SCHEMES": {
      "description": "List of schemes allowed for oauth2 redirect URIs",
      "required": false
    },
    "OIDC_RSA_PRIVATE_KEY": {
      "description": "RSA private key for OIDC",
      "required": false
    },
    "OPENEDX_API_BASE_URL": {
      "description": "The base URL for the Open edX API",
      "required": true
    },
    "OPENEDX_API_CLIENT_ID": {
      "description": "The OAuth2 client id to connect to Open edX with",
      "required": true
    },
    "OPENEDX_API_CLIENT_SECRET": {
      "description": "The OAuth2 client secret to connect to Open edX with",
      "required": true
    },
    "OPENEDX_BASE_REDIRECT_URL": {
      "description": "The base redirect URL for an OAuth Application for the Open edX API",
      "required": false
    },
    "OPENEDX_OAUTH_APP_NAME": {
      "description": "The 'name' value for the Open edX OAuth Application",
      "required": true
    },
    "OPENEDX_OAUTH_PROVIDER": {
      "description": "Social auth provider backend name",
      "required": false
    },
    "OPENEDX_RETIREMENT_SERVICE_WORKER_CLIENT_ID": {
      "description": "OAuth2 client id for retirement service worker",
      "required": false
    },
    "OPENEDX_RETIREMENT_SERVICE_WORKER_CLIENT_SECRET": {
      "description": "OAuth2 client secret for retirement service worker",
      "required": false
    },
    "OPENEDX_SERVICE_WORKER_API_TOKEN": {
      "description": "Active access token with staff level permissions to use with OpenEdX API client for service tasks",
      "required": false
    },
    "OPENEDX_SERVICE_WORKER_USERNAME": {
      "description": "Username of the user whose token has been set in OPENEDX_SERVICE_WORKER_API_TOKEN",
      "required": false
    },
    "OPENEDX_SOCIAL_LOGIN_PATH": {
      "description": "Open edX social auth login url",
      "required": false
    },
    "OPENEDX_TOKEN_EXPIRES_HOURS": {
      "description": "The number of hours until an access token for the Open edX API expires",
      "required": false
    },
    "OPEN_EXCHANGE_RATES_APP_ID": {
      "description": "open exchange app id for fetching currency exchange rate",
      "required": false
    },
    "OPEN_EXCHANGE_RATES_URL": {
      "description": "open exchange api url for fetching currency exchange rate",
      "required": false
    },
    "PGBOUNCER_DEFAULT_POOL_SIZE": {
      "value": "50"
    },
    "PGBOUNCER_MIN_POOL_SIZE": {
      "value": "5"
    },
    "POSTHOG_API_HOST": {
      "description": "API host for PostHog",
      "required": false
    },
    "POSTHOG_ENABLED": {
      "description": "Whether PostHog is enabled",
      "required": false
    },
    "POSTHOG_FEATURE_FLAG_REQUEST_TIMEOUT_MS": {
      "description": "Timeout(MS) for PostHog feature flag requests.",
      "required": false
    },
    "POSTHOG_MAX_RETRIES": {
      "description": "Number of times that requests to PostHog should be retried after failing.",
      "required": false
    },
    "POSTHOG_PROJECT_API_KEY": {
      "description": "API token to communicate with PostHog",
      "required": false
    },
    "RECAPTCHA_SECRET_KEY": {
      "description": "The ReCaptcha secret key",
      "required": false
    },
    "RECAPTCHA_SITE_KEY": {
      "description": "The ReCaptcha site key",
      "required": false
    },
    "REDISCLOUD_URL": {
      "description": "RedisCloud connection url",
      "required": false
    },
    "REDIS_URL": {
      "description": "Redis URL for non-production use",
      "required": false
    },
    "REFRESH_FEATURED_HOMEPAGE_ITEMS_FREQ": {
      "description": "How many seconds between checking for featured items for the homepage in the local in memory cache",
      "required": false
    },
    "REPAIR_OPENEDX_USERS_FREQUENCY": {
      "description": "How many seconds between repairing openedx records for faulty users",
      "required": false
    },
    "RETRY_FAILED_EDX_ENROLLMENT_FREQUENCY": {
      "description": "How many seconds between retrying failed edX enrollments",
      "required": false
    },
    "ROBOTS_CACHE_TIMEOUT": {
      "description": "How long the robots.txt file should be cached",
      "required": false
    },
    "SECRET_KEY": {
      "description": "Django secret key.",
      "generator": "secret",
      "required": true
    },
    "SENTRY_DSN": {
      "description": "The connection settings for Sentry",
      "required": false
    },
    "SENTRY_LOG_LEVEL": {
      "description": "The log level for Sentry",
      "required": false
    },
    "SITE_NAME": {
      "description": "Name of the site. e.g MITx Online",
      "required": false
    },
    "SOCIAL_AUTH_OL_OIDC_KEY": {
      "description": "The client id for the OIDC provider",
      "required": false
    },
    "SOCIAL_AUTH_OL_OIDC_OIDC_ENDPOINT": {
      "description": "The configuration endpoint for the OIDC provider",
      "required": false
    },
    "SOCIAL_AUTH_OL_OIDC_SECRET": {
      "description": "The client secret for the OIDC provider",
      "required": false
    },
    "STATUS_TOKEN": {
      "description": "Token to access the status API.",
      "required": false
    },
    "UNIFIED_ECOMMERCE_API_KEY": {
      "description": "The API key for Unified Ecommerce.",
      "required": false
    },
    "UNIFIED_ECOMMERCE_URL": {
      "description": "The base URL for Unified Ecommerce.",
      "required": false
    },
    "USE_X_FORWARDED_HOST": {
      "description": "Set HOST header to original domain accessed by user",
      "required": false
    }
  },
  "keywords": [
    "Django",
    "Python",
    "MIT",
    "Office of Digital Learning"
  ],
  "name": "mitx_online",
  "repository": "https://github.com/mitodl/mitx-online",
  "scripts": {
    "postdeploy": "./manage.py migrate --noinput"
  },
  "success_url": "/",
  "website": "https://github.com/mitodl/mitx-online"
}