# generated by datamodel-codegen:
#   filename:  https://www.keycloak.org/docs-api/latest/rest-api/openapi.yaml
#   timestamp: 2025-09-09T17:09:39+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, Optional


@dataclass
class Access:
    roles: Optional[list[str]] = None
    verify_caller: Optional[bool] = None


@dataclass
class AddressClaimSet:
    formatted: Optional[str] = None
    street_address: Optional[str] = None
    locality: Optional[str] = None
    region: Optional[str] = None
    postal_code: Optional[str] = None
    country: Optional[str] = None


@dataclass
class AuthDetailsRepresentation:
    realmId: Optional[str] = None
    clientId: Optional[str] = None
    userId: Optional[str] = None
    ipAddress: Optional[str] = None


@dataclass
class AuthenticationExecutionExportRepresentation:
    authenticatorConfig: Optional[str] = None
    authenticator: Optional[str] = None
    authenticatorFlow: Optional[bool] = None
    requirement: Optional[str] = None
    priority: Optional[int] = None
    autheticatorFlow: Optional[bool] = None
    flowAlias: Optional[str] = None
    userSetupAllowed: Optional[bool] = None


@dataclass
class AuthenticationExecutionInfoRepresentation:
    id: Optional[str] = None
    requirement: Optional[str] = None
    displayName: Optional[str] = None
    alias: Optional[str] = None
    description: Optional[str] = None
    requirementChoices: Optional[list[str]] = None
    configurable: Optional[bool] = None
    authenticationFlow: Optional[bool] = None
    providerId: Optional[str] = None
    authenticationConfig: Optional[str] = None
    flowId: Optional[str] = None
    level: Optional[int] = None
    index: Optional[int] = None
    priority: Optional[int] = None


@dataclass
class AuthenticationExecutionRepresentation:
    authenticatorConfig: Optional[str] = None
    authenticator: Optional[str] = None
    authenticatorFlow: Optional[bool] = None
    requirement: Optional[str] = None
    priority: Optional[int] = None
    autheticatorFlow: Optional[bool] = None
    id: Optional[str] = None
    flowId: Optional[str] = None
    parentFlow: Optional[str] = None


@dataclass
class AuthenticationFlowRepresentation:
    id: Optional[str] = None
    alias: Optional[str] = None
    description: Optional[str] = None
    providerId: Optional[str] = None
    topLevel: Optional[bool] = None
    builtIn: Optional[bool] = None
    authenticationExecutions: Optional[
        list[AuthenticationExecutionExportRepresentation]
    ] = None


@dataclass
class AuthenticatorConfigRepresentation:
    id: Optional[str] = None
    alias: Optional[str] = None
    config: Optional[dict[str, str]] = None


class BruteForceStrategy(Enum):
    LINEAR = "LINEAR"
    MULTIPLE = "MULTIPLE"


@dataclass
class CertificateRepresentation:
    privateKey: Optional[str] = None
    publicKey: Optional[str] = None
    certificate: Optional[str] = None
    kid: Optional[str] = None


@dataclass
class ClaimRepresentation:
    name: Optional[bool] = None
    username: Optional[bool] = None
    profile: Optional[bool] = None
    picture: Optional[bool] = None
    website: Optional[bool] = None
    email: Optional[bool] = None
    gender: Optional[bool] = None
    locale: Optional[bool] = None
    address: Optional[bool] = None
    phone: Optional[bool] = None


@dataclass
class ClientInitialAccessCreatePresentation:
    expiration: Optional[int] = None
    count: Optional[int] = None


@dataclass
class ClientInitialAccessPresentation:
    id: Optional[str] = None
    token: Optional[str] = None
    timestamp: Optional[int] = None
    expiration: Optional[int] = None
    count: Optional[int] = None
    remainingCount: Optional[int] = None


@dataclass
class ClientPolicyConditionRepresentation:
    condition: Optional[str] = None
    configuration: Optional[dict[str, Any]] = None


@dataclass
class ClientPolicyExecutorRepresentation:
    executor: Optional[str] = None
    configuration: Optional[dict[str, Any]] = None


@dataclass
class ClientPolicyRepresentation:
    name: Optional[str] = None
    description: Optional[str] = None
    enabled: Optional[bool] = None
    conditions: Optional[list[ClientPolicyConditionRepresentation]] = None
    profiles: Optional[list[str]] = None


@dataclass
class ClientProfileRepresentation:
    name: Optional[str] = None
    description: Optional[str] = None
    executors: Optional[list[ClientPolicyExecutorRepresentation]] = None


@dataclass
class ClientProfilesRepresentation:
    profiles: Optional[list[ClientProfileRepresentation]] = None
    globalProfiles: Optional[list[ClientProfileRepresentation]] = None


@dataclass
class Composites:
    realm: Optional[list[str]] = None
    client: Optional[dict[str, list[str]]] = None
    application: Optional[dict[str, list[str]]] = None


@dataclass
class ConfigPropertyRepresentation:
    name: Optional[str] = None
    label: Optional[str] = None
    helpText: Optional[str] = None
    type: Optional[str] = None
    defaultValue: Optional[Any] = None
    options: Optional[list[str]] = None
    secret: Optional[bool] = None
    required: Optional[bool] = None
    readOnly: Optional[bool] = None


@dataclass
class Confirmation:
    x5t_S256: Optional[str] = None
    jkt: Optional[str] = None


class DecisionEffect(Enum):
    PERMIT = "PERMIT"
    DENY = "DENY"


class DecisionStrategy(Enum):
    AFFIRMATIVE = "AFFIRMATIVE"
    UNANIMOUS = "UNANIMOUS"
    CONSENSUS = "CONSENSUS"


class EnforcementMode(Enum):
    PERMISSIVE = "PERMISSIVE"
    ENFORCING = "ENFORCING"
    DISABLED = "DISABLED"


@dataclass
class ErrorRepresentation:
    field: Optional[str] = None
    errorMessage: Optional[str] = None
    params: Optional[list] = None
    errors: Optional[list[ErrorRepresentation]] = None


@dataclass
class EventRepresentation:
    id: Optional[str] = None
    time: Optional[int] = None
    type: Optional[str] = None
    realmId: Optional[str] = None
    clientId: Optional[str] = None
    userId: Optional[str] = None
    sessionId: Optional[str] = None
    ipAddress: Optional[str] = None
    error: Optional[str] = None
    details: Optional[dict[str, str]] = None


@dataclass
class FederatedIdentityRepresentation:
    identityProvider: Optional[str] = None
    userId: Optional[str] = None
    userName: Optional[str] = None


@dataclass
class GlobalRequestResult:
    successRequests: Optional[list[str]] = None
    failedRequests: Optional[list[str]] = None


@dataclass
class GroupRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    path: Optional[str] = None
    parentId: Optional[str] = None
    subGroupCount: Optional[int] = None
    subGroups: Optional[list[GroupRepresentation]] = None
    attributes: Optional[dict[str, list[str]]] = None
    realmRoles: Optional[list[str]] = None
    clientRoles: Optional[dict[str, list[str]]] = None
    access: Optional[dict[str, bool]] = None


@dataclass
class IDToken:
    jti: Optional[str] = None
    exp: Optional[int] = None
    nbf: Optional[int] = None
    iat: Optional[int] = None
    iss: Optional[str] = None
    sub: Optional[str] = None
    typ: Optional[str] = None
    azp: Optional[str] = None
    otherClaims: Optional[dict[str, Any]] = None
    nonce: Optional[str] = None
    auth_time: Optional[int] = None
    sid: Optional[str] = None
    at_hash: Optional[str] = None
    c_hash: Optional[str] = None
    name: Optional[str] = None
    given_name: Optional[str] = None
    family_name: Optional[str] = None
    middle_name: Optional[str] = None
    nickname: Optional[str] = None
    preferred_username: Optional[str] = None
    profile: Optional[str] = None
    picture: Optional[str] = None
    website: Optional[str] = None
    email: Optional[str] = None
    email_verified: Optional[bool] = None
    gender: Optional[str] = None
    birthdate: Optional[str] = None
    zoneinfo: Optional[str] = None
    locale: Optional[str] = None
    phone_number: Optional[str] = None
    phone_number_verified: Optional[bool] = None
    address: Optional[AddressClaimSet] = None
    updated_at: Optional[int] = None
    claims_locales: Optional[str] = None
    acr: Optional[str] = None
    s_hash: Optional[str] = None


@dataclass
class IdentityProviderMapperRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    identityProviderAlias: Optional[str] = None
    identityProviderMapper: Optional[str] = None
    config: Optional[dict[str, str]] = None


@dataclass
class IdentityProviderMapperTypeRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    category: Optional[str] = None
    helpText: Optional[str] = None
    properties: Optional[list[ConfigPropertyRepresentation]] = None


@dataclass
class IdentityProviderRepresentation:
    alias: Optional[str] = None
    displayName: Optional[str] = None
    internalId: Optional[str] = None
    providerId: Optional[str] = None
    enabled: Optional[bool] = None
    updateProfileFirstLoginMode: Optional[str] = None
    trustEmail: Optional[bool] = None
    storeToken: Optional[bool] = None
    addReadTokenRoleOnCreate: Optional[bool] = None
    authenticateByDefault: Optional[bool] = None
    linkOnly: Optional[bool] = None
    hideOnLogin: Optional[bool] = None
    firstBrokerLoginFlowAlias: Optional[str] = None
    postBrokerLoginFlowAlias: Optional[str] = None
    organizationId: Optional[str] = None
    config: Optional[dict[str, str]] = None
    updateProfileFirstLogin: Optional[bool] = None


@dataclass
class KeyStoreConfig:
    realmCertificate: Optional[bool] = None
    storePassword: Optional[str] = None
    keyPassword: Optional[str] = None
    keyAlias: Optional[str] = None
    realmAlias: Optional[str] = None
    format: Optional[str] = None
    keySize: Optional[int] = None
    validity: Optional[int] = None


class KeyUse(Enum):
    SIG = "SIG"
    ENC = "ENC"


class Logic(Enum):
    POSITIVE = "POSITIVE"
    NEGATIVE = "NEGATIVE"


@dataclass
class ManagementPermissionReference:
    enabled: Optional[bool] = None
    resource: Optional[str] = None
    scopePermissions: Optional[dict[str, str]] = None


class MembershipType(Enum):
    UNMANAGED = "UNMANAGED"
    MANAGED = "MANAGED"


MultivaluedHashMapStringString = Optional[dict[str, list[str]]]


@dataclass
class OrganizationDomainRepresentation:
    name: Optional[str] = None
    verified: Optional[bool] = None


@dataclass
class PathCacheConfig:
    max_entries: Optional[int] = None
    lifespan: Optional[int] = None


@dataclass
class Permission:
    rsid: Optional[str] = None
    rsname: Optional[str] = None
    scopes: Optional[list[str]] = None
    claims: Optional[dict[str, list[str]]] = None


class PolicyEnforcementMode(Enum):
    ENFORCING = "ENFORCING"
    PERMISSIVE = "PERMISSIVE"
    DISABLED = "DISABLED"


@dataclass
class PolicyProviderRepresentation:
    type: Optional[str] = None
    name: Optional[str] = None
    group: Optional[str] = None


@dataclass
class PropertyConfig:
    applicable: Optional[bool] = None
    value: Optional[Any] = None


@dataclass
class ProtocolMapperEvaluationRepresentation:
    mapperId: Optional[str] = None
    mapperName: Optional[str] = None
    containerId: Optional[str] = None
    containerName: Optional[str] = None
    containerType: Optional[str] = None
    protocolMapper: Optional[str] = None


@dataclass
class ProtocolMapperRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    protocol: Optional[str] = None
    protocolMapper: Optional[str] = None
    consentRequired: Optional[bool] = None
    consentText: Optional[str] = None
    config: Optional[dict[str, str]] = None


@dataclass
class PublishedRealmRepresentation:
    realm: Optional[str] = None
    public_key: Optional[str] = None
    token_service: Optional[str] = None
    account_service: Optional[str] = None
    tokens_not_before: Optional[int] = None


@dataclass
class RealmEventsConfigRepresentation:
    eventsEnabled: Optional[bool] = None
    eventsExpiration: Optional[int] = None
    eventsListeners: Optional[list[str]] = None
    enabledEventTypes: Optional[list[str]] = None
    adminEventsEnabled: Optional[bool] = None
    adminEventsDetailsEnabled: Optional[bool] = None


@dataclass
class RequiredActionConfigInfoRepresentation:
    properties: Optional[list[ConfigPropertyRepresentation]] = None


@dataclass
class RequiredActionConfigRepresentation:
    config: Optional[dict[str, str]] = None


@dataclass
class RequiredActionProviderRepresentation:
    alias: Optional[str] = None
    name: Optional[str] = None
    providerId: Optional[str] = None
    enabled: Optional[bool] = None
    defaultAction: Optional[bool] = None
    priority: Optional[int] = None
    config: Optional[dict[str, str]] = None


@dataclass
class ResourceOwnerRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None


@dataclass
class ResourceType:
    type: Optional[str] = None
    scopes: Optional[list[str]] = None
    scopeAliases: Optional[dict[str, list[str]]] = None
    groupType: Optional[str] = None


@dataclass
class RoleRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    scopeParamRequired: Optional[bool] = None
    composite: Optional[bool] = None
    composites: Optional[Composites] = None
    clientRole: Optional[bool] = None
    containerId: Optional[str] = None
    attributes: Optional[dict[str, list[str]]] = None


@dataclass
class RolesRepresentation:
    realm: Optional[list[RoleRepresentation]] = None
    client: Optional[dict[str, list[RoleRepresentation]]] = None
    application: Optional[dict[str, list[RoleRepresentation]]] = None


class ScopeEnforcementMode(Enum):
    ALL = "ALL"
    ANY = "ANY"
    DISABLED = "DISABLED"


@dataclass
class ScopeMappingRepresentation:
    self: Optional[str] = None
    client: Optional[str] = None
    clientTemplate: Optional[str] = None
    clientScope: Optional[str] = None
    roles: Optional[list[str]] = None


@dataclass
class SocialLinkRepresentation:
    socialProvider: Optional[str] = None
    socialUserId: Optional[str] = None
    socialUsername: Optional[str] = None


@dataclass
class UPAttributePermissions:
    view: Optional[list[str]] = None
    edit: Optional[list[str]] = None


@dataclass
class UPAttributeRequired:
    roles: Optional[list[str]] = None
    scopes: Optional[list[str]] = None


@dataclass
class UPAttributeSelector:
    scopes: Optional[list[str]] = None


@dataclass
class UPGroup:
    name: Optional[str] = None
    displayHeader: Optional[str] = None
    displayDescription: Optional[str] = None
    annotations: Optional[dict[str, Any]] = None


class UnmanagedAttributePolicy(Enum):
    ENABLED = "ENABLED"
    ADMIN_VIEW = "ADMIN_VIEW"
    ADMIN_EDIT = "ADMIN_EDIT"


@dataclass
class UserConsentRepresentation:
    clientId: Optional[str] = None
    grantedClientScopes: Optional[list[str]] = None
    createdDate: Optional[int] = None
    lastUpdatedDate: Optional[int] = None
    grantedRealmRoles: Optional[list[str]] = None


@dataclass
class UserFederationMapperRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    federationProviderDisplayName: Optional[str] = None
    federationMapperType: Optional[str] = None
    config: Optional[dict[str, str]] = None


@dataclass
class UserFederationProviderRepresentation:
    id: Optional[str] = None
    displayName: Optional[str] = None
    providerName: Optional[str] = None
    config: Optional[dict[str, str]] = None
    priority: Optional[int] = None
    fullSyncPeriod: Optional[int] = None
    changedSyncPeriod: Optional[int] = None
    lastSync: Optional[int] = None


@dataclass
class UserManagedAccessConfig:
    pass


@dataclass
class UserProfileAttributeGroupMetadata:
    name: Optional[str] = None
    displayHeader: Optional[str] = None
    displayDescription: Optional[str] = None
    annotations: Optional[dict[str, Any]] = None


@dataclass
class UserProfileAttributeMetadata:
    name: Optional[str] = None
    displayName: Optional[str] = None
    required: Optional[bool] = None
    readOnly: Optional[bool] = None
    annotations: Optional[dict[str, Any]] = None
    validators: Optional[dict[str, dict[str, Any]]] = None
    group: Optional[str] = None
    multivalued: Optional[bool] = None


@dataclass
class UserProfileMetadata:
    attributes: Optional[list[UserProfileAttributeMetadata]] = None
    groups: Optional[list[UserProfileAttributeGroupMetadata]] = None


@dataclass
class UserSessionRepresentation:
    id: Optional[str] = None
    username: Optional[str] = None
    userId: Optional[str] = None
    ipAddress: Optional[str] = None
    start: Optional[int] = None
    lastAccess: Optional[int] = None
    rememberMe: Optional[bool] = None
    clients: Optional[dict[str, str]] = None
    transientUser: Optional[bool] = None


@dataclass
class AdminEventRepresentation:
    id: Optional[str] = None
    time: Optional[int] = None
    realmId: Optional[str] = None
    authDetails: Optional[AuthDetailsRepresentation] = None
    operationType: Optional[str] = None
    resourceType: Optional[str] = None
    resourcePath: Optional[str] = None
    representation: Optional[str] = None
    error: Optional[str] = None
    details: Optional[dict[str, str]] = None


@dataclass
class AuthenticatorConfigInfoRepresentation:
    name: Optional[str] = None
    providerId: Optional[str] = None
    helpText: Optional[str] = None
    properties: Optional[list[ConfigPropertyRepresentation]] = None


@dataclass
class Authorization:
    permissions: Optional[list[Permission]] = None


@dataclass
class AuthorizationSchema:
    resourceTypes: Optional[dict[str, ResourceType]] = None


@dataclass
class ClientMappingsRepresentation:
    id: Optional[str] = None
    client: Optional[str] = None
    mappings: Optional[list[RoleRepresentation]] = None


@dataclass
class ClientPoliciesRepresentation:
    policies: Optional[list[ClientPolicyRepresentation]] = None
    globalPolicies: Optional[list[ClientPolicyRepresentation]] = None


@dataclass
class ClientScopeRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    protocol: Optional[str] = None
    attributes: Optional[dict[str, str]] = None
    protocolMappers: Optional[list[ProtocolMapperRepresentation]] = None


@dataclass
class ClientTemplateRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    protocol: Optional[str] = None
    fullScopeAllowed: Optional[bool] = None
    bearerOnly: Optional[bool] = None
    consentRequired: Optional[bool] = None
    standardFlowEnabled: Optional[bool] = None
    implicitFlowEnabled: Optional[bool] = None
    directAccessGrantsEnabled: Optional[bool] = None
    serviceAccountsEnabled: Optional[bool] = None
    publicClient: Optional[bool] = None
    frontchannelLogout: Optional[bool] = None
    attributes: Optional[dict[str, str]] = None
    protocolMappers: Optional[list[ProtocolMapperRepresentation]] = None


@dataclass
class ClientTypeRepresentation:
    name: Optional[str] = None
    provider: Optional[str] = None
    parent: Optional[str] = None
    config: Optional[dict[str, PropertyConfig]] = None


@dataclass
class ClientTypesRepresentation:
    client_types: Optional[list[ClientTypeRepresentation]] = None
    global_client_types: Optional[list[ClientTypeRepresentation]] = None


@dataclass
class ComponentRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    providerId: Optional[str] = None
    providerType: Optional[str] = None
    parentId: Optional[str] = None
    subType: Optional[str] = None
    config: Optional[MultivaluedHashMapStringString] = None


@dataclass
class ComponentTypeRepresentation:
    id: Optional[str] = None
    helpText: Optional[str] = None
    properties: Optional[list[ConfigPropertyRepresentation]] = None
    metadata: Optional[dict[str, Any]] = None


@dataclass
class CredentialRepresentation:
    id: Optional[str] = None
    type: Optional[str] = None
    userLabel: Optional[str] = None
    createdDate: Optional[int] = None
    secretData: Optional[str] = None
    credentialData: Optional[str] = None
    priority: Optional[int] = None
    value: Optional[str] = None
    temporary: Optional[bool] = None
    device: Optional[str] = None
    hashedSaltedValue: Optional[str] = None
    salt: Optional[str] = None
    hashIterations: Optional[int] = None
    counter: Optional[int] = None
    algorithm: Optional[str] = None
    digits: Optional[int] = None
    period: Optional[int] = None
    config: Optional[MultivaluedHashMapStringString] = None
    federationLink: Optional[str] = None


@dataclass
class KeyMetadataRepresentation:
    providerId: Optional[str] = None
    providerPriority: Optional[int] = None
    kid: Optional[str] = None
    status: Optional[str] = None
    type: Optional[str] = None
    algorithm: Optional[str] = None
    publicKey: Optional[str] = None
    certificate: Optional[str] = None
    use: Optional[KeyUse] = None
    validTo: Optional[int] = None


@dataclass
class KeysMetadataRepresentation:
    active: Optional[dict[str, str]] = None
    keys: Optional[list[KeyMetadataRepresentation]] = None


@dataclass
class MappingsRepresentation:
    realmMappings: Optional[list[RoleRepresentation]] = None
    clientMappings: Optional[dict[str, ClientMappingsRepresentation]] = None


@dataclass
class MemberRepresentation:
    id: Optional[str] = None
    username: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None
    emailVerified: Optional[bool] = None
    attributes: Optional[dict[str, list[str]]] = None
    userProfileMetadata: Optional[UserProfileMetadata] = None
    enabled: Optional[bool] = None
    self: Optional[str] = None
    origin: Optional[str] = None
    createdTimestamp: Optional[int] = None
    totp: Optional[bool] = None
    federationLink: Optional[str] = None
    serviceAccountClientId: Optional[str] = None
    credentials: Optional[list[CredentialRepresentation]] = None
    disableableCredentialTypes: Optional[list[str]] = None
    requiredActions: Optional[list[str]] = None
    federatedIdentities: Optional[list[FederatedIdentityRepresentation]] = None
    realmRoles: Optional[list[str]] = None
    clientRoles: Optional[dict[str, list[str]]] = None
    clientConsents: Optional[list[UserConsentRepresentation]] = None
    notBefore: Optional[int] = None
    applicationRoles: Optional[dict[str, list[str]]] = None
    socialLinks: Optional[list[SocialLinkRepresentation]] = None
    groups: Optional[list[str]] = None
    access: Optional[dict[str, bool]] = None
    membershipType: Optional[MembershipType] = None


@dataclass
class MethodConfig:
    method: Optional[str] = None
    scopes: Optional[list[str]] = None
    scopes_enforcement_mode: Optional[ScopeEnforcementMode] = None


@dataclass
class OrganizationRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    alias: Optional[str] = None
    enabled: Optional[bool] = None
    description: Optional[str] = None
    redirectUrl: Optional[str] = None
    attributes: Optional[dict[str, list[str]]] = None
    domains: Optional[list[OrganizationDomainRepresentation]] = None
    members: Optional[list[MemberRepresentation]] = None
    identityProviders: Optional[list[IdentityProviderRepresentation]] = None


@dataclass
class PathConfig:
    name: Optional[str] = None
    type: Optional[str] = None
    path: Optional[str] = None
    methods: Optional[list[MethodConfig]] = None
    scopes: Optional[list[str]] = None
    id: Optional[str] = None
    enforcement_mode: Optional[EnforcementMode] = None
    claim_information_point: Optional[dict[str, dict[str, Any]]] = None
    invalidated: Optional[bool] = None
    staticPath: Optional[bool] = None
    static: Optional[bool] = None


@dataclass
class PolicyEnforcerConfig:
    enforcement_mode: Optional[EnforcementMode] = None
    paths: Optional[list[PathConfig]] = None
    path_cache: Optional[PathCacheConfig] = None
    lazy_load_paths: Optional[bool] = None
    on_deny_redirect_to: Optional[str] = None
    user_managed_access: Optional[UserManagedAccessConfig] = None
    claim_information_point: Optional[dict[str, dict[str, Any]]] = None
    http_method_as_scope: Optional[bool] = None
    realm: Optional[str] = None
    auth_server_url: Optional[str] = None
    credentials: Optional[dict[str, Any]] = None
    resource: Optional[str] = None


@dataclass
class UPAttribute:
    name: Optional[str] = None
    displayName: Optional[str] = None
    validations: Optional[dict[str, dict[str, Any]]] = None
    annotations: Optional[dict[str, Any]] = None
    required: Optional[UPAttributeRequired] = None
    permissions: Optional[UPAttributePermissions] = None
    selector: Optional[UPAttributeSelector] = None
    group: Optional[str] = None
    multivalued: Optional[bool] = None


@dataclass
class UPConfig:
    attributes: Optional[list[UPAttribute]] = None
    groups: Optional[list[UPGroup]] = None
    unmanagedAttributePolicy: Optional[UnmanagedAttributePolicy] = None


@dataclass
class UserRepresentation:
    id: Optional[str] = None
    username: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    email: Optional[str] = None
    emailVerified: Optional[bool] = None
    attributes: Optional[dict[str, list[str]]] = None
    userProfileMetadata: Optional[UserProfileMetadata] = None
    enabled: Optional[bool] = None
    self: Optional[str] = None
    origin: Optional[str] = None
    createdTimestamp: Optional[int] = None
    totp: Optional[bool] = None
    federationLink: Optional[str] = None
    serviceAccountClientId: Optional[str] = None
    credentials: Optional[list[CredentialRepresentation]] = None
    disableableCredentialTypes: Optional[list[str]] = None
    requiredActions: Optional[list[str]] = None
    federatedIdentities: Optional[list[FederatedIdentityRepresentation]] = None
    realmRoles: Optional[list[str]] = None
    clientRoles: Optional[dict[str, list[str]]] = None
    clientConsents: Optional[list[UserConsentRepresentation]] = None
    notBefore: Optional[int] = None
    applicationRoles: Optional[dict[str, list[str]]] = None
    socialLinks: Optional[list[SocialLinkRepresentation]] = None
    groups: Optional[list[str]] = None
    access: Optional[dict[str, bool]] = None


@dataclass
class AccessToken:
    jti: Optional[str] = None
    exp: Optional[int] = None
    nbf: Optional[int] = None
    iat: Optional[int] = None
    iss: Optional[str] = None
    sub: Optional[str] = None
    typ: Optional[str] = None
    azp: Optional[str] = None
    otherClaims: Optional[dict[str, Any]] = None
    nonce: Optional[str] = None
    auth_time: Optional[int] = None
    sid: Optional[str] = None
    at_hash: Optional[str] = None
    c_hash: Optional[str] = None
    name: Optional[str] = None
    given_name: Optional[str] = None
    family_name: Optional[str] = None
    middle_name: Optional[str] = None
    nickname: Optional[str] = None
    preferred_username: Optional[str] = None
    profile: Optional[str] = None
    picture: Optional[str] = None
    website: Optional[str] = None
    email: Optional[str] = None
    email_verified: Optional[bool] = None
    gender: Optional[str] = None
    birthdate: Optional[str] = None
    zoneinfo: Optional[str] = None
    locale: Optional[str] = None
    phone_number: Optional[str] = None
    phone_number_verified: Optional[bool] = None
    address: Optional[AddressClaimSet] = None
    updated_at: Optional[int] = None
    claims_locales: Optional[str] = None
    acr: Optional[str] = None
    s_hash: Optional[str] = None
    trusted_certs: Optional[list[str]] = None
    allowed_origins: Optional[list[str]] = None
    realm_access: Optional[Access] = None
    resource_access: Optional[dict[str, Access]] = None
    authorization: Optional[Authorization] = None
    cnf: Optional[Confirmation] = None
    scope: Optional[str] = None


@dataclass
class InstallationAdapterConfig:
    realm: Optional[str] = None
    realm_public_key: Optional[str] = None
    auth_server_url: Optional[str] = None
    ssl_required: Optional[str] = None
    bearer_only: Optional[bool] = None
    resource: Optional[str] = None
    public_client: Optional[bool] = None
    verify_token_audience: Optional[bool] = None
    credentials: Optional[dict[str, Any]] = None
    use_resource_role_mappings: Optional[bool] = None
    confidential_port: Optional[int] = None
    policy_enforcer: Optional[PolicyEnforcerConfig] = None


@dataclass
class AbstractPolicyRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    type: Optional[str] = None
    policies: Optional[list[str]] = None
    resources: Optional[list[str]] = None
    scopes: Optional[list[str]] = None
    logic: Optional[Logic] = None
    decisionStrategy: Optional[DecisionStrategy] = None
    owner: Optional[str] = None
    resourceType: Optional[str] = None
    resourcesData: Optional[list[ResourceRepresentation]] = None
    scopesData: Optional[list[ScopeRepresentation]] = None


@dataclass
class ApplicationRepresentation:
    id: Optional[str] = None
    clientId: Optional[str] = None
    description: Optional[str] = None
    type: Optional[str] = None
    rootUrl: Optional[str] = None
    adminUrl: Optional[str] = None
    baseUrl: Optional[str] = None
    surrogateAuthRequired: Optional[bool] = None
    enabled: Optional[bool] = None
    alwaysDisplayInConsole: Optional[bool] = None
    clientAuthenticatorType: Optional[str] = None
    secret: Optional[str] = None
    registrationAccessToken: Optional[str] = None
    defaultRoles: Optional[list[str]] = None
    redirectUris: Optional[list[str]] = None
    webOrigins: Optional[list[str]] = None
    notBefore: Optional[int] = None
    bearerOnly: Optional[bool] = None
    consentRequired: Optional[bool] = None
    standardFlowEnabled: Optional[bool] = None
    implicitFlowEnabled: Optional[bool] = None
    directAccessGrantsEnabled: Optional[bool] = None
    serviceAccountsEnabled: Optional[bool] = None
    authorizationServicesEnabled: Optional[bool] = None
    directGrantsOnly: Optional[bool] = None
    publicClient: Optional[bool] = None
    frontchannelLogout: Optional[bool] = None
    protocol: Optional[str] = None
    attributes: Optional[dict[str, str]] = None
    authenticationFlowBindingOverrides: Optional[dict[str, str]] = None
    fullScopeAllowed: Optional[bool] = None
    nodeReRegistrationTimeout: Optional[int] = None
    registeredNodes: Optional[dict[str, int]] = None
    protocolMappers: Optional[list[ProtocolMapperRepresentation]] = None
    clientTemplate: Optional[str] = None
    useTemplateConfig: Optional[bool] = None
    useTemplateScope: Optional[bool] = None
    useTemplateMappers: Optional[bool] = None
    defaultClientScopes: Optional[list[str]] = None
    optionalClientScopes: Optional[list[str]] = None
    authorizationSettings: Optional[ResourceServerRepresentation] = None
    access: Optional[dict[str, bool]] = None
    origin: Optional[str] = None
    name: Optional[str] = None
    claims: Optional[ClaimRepresentation] = None


@dataclass
class ClientRepresentation:
    id: Optional[str] = None
    clientId: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    type: Optional[str] = None
    rootUrl: Optional[str] = None
    adminUrl: Optional[str] = None
    baseUrl: Optional[str] = None
    surrogateAuthRequired: Optional[bool] = None
    enabled: Optional[bool] = None
    alwaysDisplayInConsole: Optional[bool] = None
    clientAuthenticatorType: Optional[str] = None
    secret: Optional[str] = None
    registrationAccessToken: Optional[str] = None
    defaultRoles: Optional[list[str]] = None
    redirectUris: Optional[list[str]] = None
    webOrigins: Optional[list[str]] = None
    notBefore: Optional[int] = None
    bearerOnly: Optional[bool] = None
    consentRequired: Optional[bool] = None
    standardFlowEnabled: Optional[bool] = None
    implicitFlowEnabled: Optional[bool] = None
    directAccessGrantsEnabled: Optional[bool] = None
    serviceAccountsEnabled: Optional[bool] = None
    authorizationServicesEnabled: Optional[bool] = None
    directGrantsOnly: Optional[bool] = None
    publicClient: Optional[bool] = None
    frontchannelLogout: Optional[bool] = None
    protocol: Optional[str] = None
    attributes: Optional[dict[str, str]] = None
    authenticationFlowBindingOverrides: Optional[dict[str, str]] = None
    fullScopeAllowed: Optional[bool] = None
    nodeReRegistrationTimeout: Optional[int] = None
    registeredNodes: Optional[dict[str, int]] = None
    protocolMappers: Optional[list[ProtocolMapperRepresentation]] = None
    clientTemplate: Optional[str] = None
    useTemplateConfig: Optional[bool] = None
    useTemplateScope: Optional[bool] = None
    useTemplateMappers: Optional[bool] = None
    defaultClientScopes: Optional[list[str]] = None
    optionalClientScopes: Optional[list[str]] = None
    authorizationSettings: Optional[ResourceServerRepresentation] = None
    access: Optional[dict[str, bool]] = None
    origin: Optional[str] = None


@dataclass
class ComponentExportRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    providerId: Optional[str] = None
    subType: Optional[str] = None
    subComponents: Optional[MultivaluedHashMapStringComponentExportRepresentation] = (
        None
    )
    config: Optional[MultivaluedHashMapStringString] = None


@dataclass
class EvaluationResultRepresentation:
    resource: Optional[ResourceRepresentation] = None
    scopes: Optional[list[ScopeRepresentation]] = None
    policies: Optional[list[PolicyResultRepresentation]] = None
    status: Optional[DecisionEffect] = None
    allowedScopes: Optional[list[ScopeRepresentation]] = None
    deniedScopes: Optional[list[ScopeRepresentation]] = None


MultivaluedHashMapStringComponentExportRepresentation = Optional[
    dict[str, list[ComponentExportRepresentation]]
]


@dataclass
class OAuthClientRepresentation:
    id: Optional[str] = None
    clientId: Optional[str] = None
    description: Optional[str] = None
    type: Optional[str] = None
    rootUrl: Optional[str] = None
    adminUrl: Optional[str] = None
    baseUrl: Optional[str] = None
    surrogateAuthRequired: Optional[bool] = None
    enabled: Optional[bool] = None
    alwaysDisplayInConsole: Optional[bool] = None
    clientAuthenticatorType: Optional[str] = None
    secret: Optional[str] = None
    registrationAccessToken: Optional[str] = None
    defaultRoles: Optional[list[str]] = None
    redirectUris: Optional[list[str]] = None
    webOrigins: Optional[list[str]] = None
    notBefore: Optional[int] = None
    bearerOnly: Optional[bool] = None
    consentRequired: Optional[bool] = None
    standardFlowEnabled: Optional[bool] = None
    implicitFlowEnabled: Optional[bool] = None
    directAccessGrantsEnabled: Optional[bool] = None
    serviceAccountsEnabled: Optional[bool] = None
    authorizationServicesEnabled: Optional[bool] = None
    directGrantsOnly: Optional[bool] = None
    publicClient: Optional[bool] = None
    frontchannelLogout: Optional[bool] = None
    protocol: Optional[str] = None
    attributes: Optional[dict[str, str]] = None
    authenticationFlowBindingOverrides: Optional[dict[str, str]] = None
    fullScopeAllowed: Optional[bool] = None
    nodeReRegistrationTimeout: Optional[int] = None
    registeredNodes: Optional[dict[str, int]] = None
    protocolMappers: Optional[list[ProtocolMapperRepresentation]] = None
    clientTemplate: Optional[str] = None
    useTemplateConfig: Optional[bool] = None
    useTemplateScope: Optional[bool] = None
    useTemplateMappers: Optional[bool] = None
    defaultClientScopes: Optional[list[str]] = None
    optionalClientScopes: Optional[list[str]] = None
    authorizationSettings: Optional[ResourceServerRepresentation] = None
    access: Optional[dict[str, bool]] = None
    origin: Optional[str] = None
    name: Optional[str] = None
    claims: Optional[ClaimRepresentation] = None


@dataclass
class PolicyEvaluationRequest:
    context: Optional[dict[str, dict[str, str]]] = None
    resources: Optional[list[ResourceRepresentation]] = None
    resourceType: Optional[str] = None
    clientId: Optional[str] = None
    userId: Optional[str] = None
    roleIds: Optional[list[str]] = None
    entitlements: Optional[bool] = None


@dataclass
class PolicyEvaluationResponse:
    results: Optional[list[EvaluationResultRepresentation]] = None
    entitlements: Optional[bool] = None
    status: Optional[DecisionEffect] = None
    rpt: Optional[AccessToken] = None


@dataclass
class PolicyRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    type: Optional[str] = None
    policies: Optional[list[str]] = None
    resources: Optional[list[str]] = None
    scopes: Optional[list[str]] = None
    logic: Optional[Logic] = None
    decisionStrategy: Optional[DecisionStrategy] = None
    owner: Optional[str] = None
    resourceType: Optional[str] = None
    resourcesData: Optional[list[ResourceRepresentation]] = None
    scopesData: Optional[list[ScopeRepresentation]] = None
    config: Optional[dict[str, str]] = None


@dataclass
class PolicyResultRepresentation:
    policy: Optional[PolicyRepresentation] = None
    status: Optional[DecisionEffect] = None
    associatedPolicies: Optional[list[PolicyResultRepresentation]] = None
    scopes: Optional[list[str]] = None
    resourceType: Optional[str] = None


@dataclass
class RealmRepresentation:
    id: Optional[str] = None
    realm: Optional[str] = None
    displayName: Optional[str] = None
    displayNameHtml: Optional[str] = None
    notBefore: Optional[int] = None
    defaultSignatureAlgorithm: Optional[str] = None
    revokeRefreshToken: Optional[bool] = None
    refreshTokenMaxReuse: Optional[int] = None
    accessTokenLifespan: Optional[int] = None
    accessTokenLifespanForImplicitFlow: Optional[int] = None
    ssoSessionIdleTimeout: Optional[int] = None
    ssoSessionMaxLifespan: Optional[int] = None
    ssoSessionIdleTimeoutRememberMe: Optional[int] = None
    ssoSessionMaxLifespanRememberMe: Optional[int] = None
    offlineSessionIdleTimeout: Optional[int] = None
    offlineSessionMaxLifespanEnabled: Optional[bool] = None
    offlineSessionMaxLifespan: Optional[int] = None
    clientSessionIdleTimeout: Optional[int] = None
    clientSessionMaxLifespan: Optional[int] = None
    clientOfflineSessionIdleTimeout: Optional[int] = None
    clientOfflineSessionMaxLifespan: Optional[int] = None
    accessCodeLifespan: Optional[int] = None
    accessCodeLifespanUserAction: Optional[int] = None
    accessCodeLifespanLogin: Optional[int] = None
    actionTokenGeneratedByAdminLifespan: Optional[int] = None
    actionTokenGeneratedByUserLifespan: Optional[int] = None
    oauth2DeviceCodeLifespan: Optional[int] = None
    oauth2DevicePollingInterval: Optional[int] = None
    enabled: Optional[bool] = None
    sslRequired: Optional[str] = None
    passwordCredentialGrantAllowed: Optional[bool] = None
    registrationAllowed: Optional[bool] = None
    registrationEmailAsUsername: Optional[bool] = None
    rememberMe: Optional[bool] = None
    verifyEmail: Optional[bool] = None
    loginWithEmailAllowed: Optional[bool] = None
    duplicateEmailsAllowed: Optional[bool] = None
    resetPasswordAllowed: Optional[bool] = None
    editUsernameAllowed: Optional[bool] = None
    userCacheEnabled: Optional[bool] = None
    realmCacheEnabled: Optional[bool] = None
    bruteForceProtected: Optional[bool] = None
    permanentLockout: Optional[bool] = None
    maxTemporaryLockouts: Optional[int] = None
    bruteForceStrategy: Optional[BruteForceStrategy] = None
    maxFailureWaitSeconds: Optional[int] = None
    minimumQuickLoginWaitSeconds: Optional[int] = None
    waitIncrementSeconds: Optional[int] = None
    quickLoginCheckMilliSeconds: Optional[int] = None
    maxDeltaTimeSeconds: Optional[int] = None
    failureFactor: Optional[int] = None
    privateKey: Optional[str] = None
    publicKey: Optional[str] = None
    certificate: Optional[str] = None
    codeSecret: Optional[str] = None
    roles: Optional[RolesRepresentation] = None
    groups: Optional[list[GroupRepresentation]] = None
    defaultRoles: Optional[list[str]] = None
    defaultRole: Optional[RoleRepresentation] = None
    adminPermissionsClient: Optional[ClientRepresentation] = None
    defaultGroups: Optional[list[str]] = None
    requiredCredentials: Optional[list[str]] = None
    passwordPolicy: Optional[str] = None
    otpPolicyType: Optional[str] = None
    otpPolicyAlgorithm: Optional[str] = None
    otpPolicyInitialCounter: Optional[int] = None
    otpPolicyDigits: Optional[int] = None
    otpPolicyLookAheadWindow: Optional[int] = None
    otpPolicyPeriod: Optional[int] = None
    otpPolicyCodeReusable: Optional[bool] = None
    otpSupportedApplications: Optional[list[str]] = None
    localizationTexts: Optional[dict[str, dict[str, str]]] = None
    webAuthnPolicyRpEntityName: Optional[str] = None
    webAuthnPolicySignatureAlgorithms: Optional[list[str]] = None
    webAuthnPolicyRpId: Optional[str] = None
    webAuthnPolicyAttestationConveyancePreference: Optional[str] = None
    webAuthnPolicyAuthenticatorAttachment: Optional[str] = None
    webAuthnPolicyRequireResidentKey: Optional[str] = None
    webAuthnPolicyUserVerificationRequirement: Optional[str] = None
    webAuthnPolicyCreateTimeout: Optional[int] = None
    webAuthnPolicyAvoidSameAuthenticatorRegister: Optional[bool] = None
    webAuthnPolicyAcceptableAaguids: Optional[list[str]] = None
    webAuthnPolicyExtraOrigins: Optional[list[str]] = None
    webAuthnPolicyPasswordlessRpEntityName: Optional[str] = None
    webAuthnPolicyPasswordlessSignatureAlgorithms: Optional[list[str]] = None
    webAuthnPolicyPasswordlessRpId: Optional[str] = None
    webAuthnPolicyPasswordlessAttestationConveyancePreference: Optional[str] = None
    webAuthnPolicyPasswordlessAuthenticatorAttachment: Optional[str] = None
    webAuthnPolicyPasswordlessRequireResidentKey: Optional[str] = None
    webAuthnPolicyPasswordlessUserVerificationRequirement: Optional[str] = None
    webAuthnPolicyPasswordlessCreateTimeout: Optional[int] = None
    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: Optional[bool] = None
    webAuthnPolicyPasswordlessAcceptableAaguids: Optional[list[str]] = None
    webAuthnPolicyPasswordlessExtraOrigins: Optional[list[str]] = None
    webAuthnPolicyPasswordlessPasskeysEnabled: Optional[bool] = None
    clientProfiles: Optional[ClientProfilesRepresentation] = None
    clientPolicies: Optional[ClientPoliciesRepresentation] = None
    users: Optional[list[UserRepresentation]] = None
    federatedUsers: Optional[list[UserRepresentation]] = None
    scopeMappings: Optional[list[ScopeMappingRepresentation]] = None
    clientScopeMappings: Optional[dict[str, list[ScopeMappingRepresentation]]] = None
    clients: Optional[list[ClientRepresentation]] = None
    clientScopes: Optional[list[ClientScopeRepresentation]] = None
    defaultDefaultClientScopes: Optional[list[str]] = None
    defaultOptionalClientScopes: Optional[list[str]] = None
    browserSecurityHeaders: Optional[dict[str, str]] = None
    smtpServer: Optional[dict[str, str]] = None
    userFederationProviders: Optional[list[UserFederationProviderRepresentation]] = None
    userFederationMappers: Optional[list[UserFederationMapperRepresentation]] = None
    loginTheme: Optional[str] = None
    accountTheme: Optional[str] = None
    adminTheme: Optional[str] = None
    emailTheme: Optional[str] = None
    eventsEnabled: Optional[bool] = None
    eventsExpiration: Optional[int] = None
    eventsListeners: Optional[list[str]] = None
    enabledEventTypes: Optional[list[str]] = None
    adminEventsEnabled: Optional[bool] = None
    adminEventsDetailsEnabled: Optional[bool] = None
    identityProviders: Optional[list[IdentityProviderRepresentation]] = None
    identityProviderMappers: Optional[list[IdentityProviderMapperRepresentation]] = None
    protocolMappers: Optional[list[ProtocolMapperRepresentation]] = None
    components: Optional[MultivaluedHashMapStringComponentExportRepresentation] = None
    internationalizationEnabled: Optional[bool] = None
    supportedLocales: Optional[list[str]] = None
    defaultLocale: Optional[str] = None
    authenticationFlows: Optional[list[AuthenticationFlowRepresentation]] = None
    authenticatorConfig: Optional[list[AuthenticatorConfigRepresentation]] = None
    requiredActions: Optional[list[RequiredActionProviderRepresentation]] = None
    browserFlow: Optional[str] = None
    registrationFlow: Optional[str] = None
    directGrantFlow: Optional[str] = None
    resetCredentialsFlow: Optional[str] = None
    clientAuthenticationFlow: Optional[str] = None
    dockerAuthenticationFlow: Optional[str] = None
    firstBrokerLoginFlow: Optional[str] = None
    attributes: Optional[dict[str, str]] = None
    keycloakVersion: Optional[str] = None
    userManagedAccessAllowed: Optional[bool] = None
    organizationsEnabled: Optional[bool] = None
    organizations: Optional[list[OrganizationRepresentation]] = None
    verifiableCredentialsEnabled: Optional[bool] = None
    adminPermissionsEnabled: Optional[bool] = None
    social: Optional[bool] = None
    updateProfileOnInitialSocialLogin: Optional[bool] = None
    socialProviders: Optional[dict[str, str]] = None
    applicationScopeMappings: Optional[dict[str, list[ScopeMappingRepresentation]]] = (
        None
    )
    applications: Optional[list[ApplicationRepresentation]] = None
    oauthClients: Optional[list[OAuthClientRepresentation]] = None
    clientTemplates: Optional[list[ClientTemplateRepresentation]] = None
    oAuth2DeviceCodeLifespan: Optional[int] = None
    oAuth2DevicePollingInterval: Optional[int] = None


@dataclass
class ResourceRepresentation:
    field_id: Optional[str] = None
    name: Optional[str] = None
    uris: Optional[list[str]] = None
    type: Optional[str] = None
    scopes: Optional[list[ScopeRepresentation]] = None
    icon_uri: Optional[str] = None
    owner: Optional[ResourceOwnerRepresentation] = None
    ownerManagedAccess: Optional[bool] = None
    displayName: Optional[str] = None
    attributes: Optional[dict[str, list[str]]] = None
    uri: Optional[str] = None
    scopesUma: Optional[list[ScopeRepresentation]] = None


@dataclass
class ResourceServerRepresentation:
    id: Optional[str] = None
    clientId: Optional[str] = None
    name: Optional[str] = None
    allowRemoteResourceManagement: Optional[bool] = None
    policyEnforcementMode: Optional[PolicyEnforcementMode] = None
    resources: Optional[list[ResourceRepresentation]] = None
    policies: Optional[list[PolicyRepresentation]] = None
    scopes: Optional[list[ScopeRepresentation]] = None
    decisionStrategy: Optional[DecisionStrategy] = None
    authorizationSchema: Optional[AuthorizationSchema] = None


@dataclass
class ScopeRepresentation:
    id: Optional[str] = None
    name: Optional[str] = None
    iconUri: Optional[str] = None
    policies: Optional[list[PolicyRepresentation]] = None
    resources: Optional[list[ResourceRepresentation]] = None
    displayName: Optional[str] = None
