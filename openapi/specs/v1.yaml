openapi: 3.0.3
info:
  title: MITx Online API
  version: 0.0.1 (v1)
  description: MIT public API
paths:
  /.well-known/openid-configuration:
    get:
      operationId: .well_known_openid_configuration_retrieve
      description: View for openid configuration
      tags:
      - .well-known
      responses:
        '200':
          description: No response body
  /api/auths/:
    get:
      operationId: api_auths_retrieve
      description: View that returns a serialized list of the logged-in user's UserSocialAuth
        types
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/baskets/:
    get:
      operationId: api_baskets_list
      description: API view set for Basket
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Basket'
          description: ''
  /api/baskets/{parent_lookup_basket}/discounts/:
    get:
      operationId: api_baskets_discounts_list
      description: Applied basket discounts
      parameters:
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasketDiscount'
          description: ''
  /api/baskets/{parent_lookup_basket}/discounts/{id}/:
    get:
      operationId: api_baskets_discounts_retrieve
      description: Applied basket discounts
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketDiscount'
          description: ''
  /api/baskets/{parent_lookup_basket}/items/:
    get:
      operationId: api_baskets_items_list
      description: API view set for BasketItem
      parameters:
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasketItem'
          description: ''
    post:
      operationId: api_baskets_items_create
      description: API view set for BasketItem
      parameters:
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItem'
          description: ''
  /api/baskets/{parent_lookup_basket}/items/{id}/:
    delete:
      operationId: api_baskets_items_destroy
      description: API view set for BasketItem
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/baskets/{username}/:
    get:
      operationId: api_baskets_retrieve
      description: API view set for Basket
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
          description: ''
  /api/change-emails/:
    post:
      operationId: api_change_emails_create
      description: Viewset for creating and updating email change requests
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequestCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequestCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequestCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEmailRequestCreate'
          description: ''
  /api/change-emails/{code}/:
    put:
      operationId: api_change_emails_update
      description: Viewset for creating and updating email change requests
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_change_emails_partial_update
      description: Viewset for creating and updating email change requests
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangeEmailRequestUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangeEmailRequestUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangeEmailRequestUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEmailRequestUpdate'
          description: ''
  /api/checkout/add_to_cart/:
    post:
      operationId: api_checkout_add_to_cart_create
      description: Add product to the cart
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/checkout/cart/:
    get:
      operationId: api_checkout_cart_retrieve
      description: Returns the current cart, with the product info embedded.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/checkout/redeem_discount/:
    post:
      operationId: api_checkout_redeem_discount_create
      description: |-
        API call to redeem a discount. Discounts are attached to the basket so
        they can be attached at any time in the checkout process. Later on,
        they'll be converted to attach to the resulting Order (as Baskets are
        ephemeral).

        Discount application is subject to these rules:
        - The discount can't be flagged for use with flexible pricing.
        - If the discount is tied to a product, the product must already be in
          the basket.

        POST Args:
            - discount (str): Discount Code to apply

        Returns:
            - Success message on success
            - HTTP 406 if there's no basket yet
            - HTTP 404 if the discount isn't found
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/checkout/result/:
    post:
      operationId: api_checkout_result_create
      description: |-
        This endpoint is called by Cybersource as a server-to-server call
        in order to respond with the payment details.

        Returns:
            - HTTP_200_OK if the Order is found.

        Raises:
            - Http404 if the Order is not found.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/checkout/start_checkout/:
    post:
      operationId: api_checkout_start_checkout_create
      description: |-
        API call to start the checkout process. This assembles the basket items
        into an Order with Lines for each item, applies the attached basket
        discounts, and then calls the payment gateway to prepare for payment.

        Returns:
            - JSON payload from the ol-django payment gateway app. The payment
              gateway returns data necessary to construct a form that will
              ultimately POST to the actual payment processor.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/countries/:
    get:
      operationId: api_countries_retrieve
      description: Get generator for countries/states list
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/course_runs/:
    get:
      operationId: api_course_runs_list
      description: API view set for CourseRuns
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: boolean
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseRunWithCourse'
          description: ''
  /api/course_runs/{id}/:
    get:
      operationId: api_course_runs_retrieve
      description: API view set for CourseRuns
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course run.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunWithCourse'
          description: ''
  /api/courses/:
    get:
      operationId: api_courses_list
      description: API view set for Courses
      parameters:
      - in: query
        name: courserun_is_enrollable
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page__live
        schema:
          type: boolean
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: readable_id
        schema:
          type: string
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseWithCourseRunsList'
          description: ''
  /api/courses/{id}/:
    get:
      operationId: api_courses_retrieve
      description: API view set for Courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWithCourseRuns'
          description: ''
  /api/departments/:
    get:
      operationId: api_departments_list
      description: API view set for Departments
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentWithCount'
          description: ''
  /api/departments/{id}/:
    get:
      operationId: api_departments_retrieve
      description: API view set for Departments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentWithCount'
          description: ''
  /api/discounts/:
    get:
      operationId: api_discounts_list
      description: API view set for Discounts
      parameters:
      - in: query
        name: is_redeemed
        schema:
          type: string
          enum:
          - 'no'
          - 'yes'
        description: |-
          * `yes` - yes
          * `no` - no
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: payment_type
        schema:
          type: string
          nullable: true
          enum:
          - customer-support
          - financial-assistance
          - legacy
          - marketing
          - sales
          - staff
        description: |-
          * `marketing` - marketing
          * `sales` - sales
          * `financial-assistance` - financial-assistance
          * `customer-support` - customer-support
          * `staff` - staff
          * `legacy` - legacy
      - in: query
        name: q
        schema:
          type: string
        description: q
      - in: query
        name: redemption_type
        schema:
          type: string
          enum:
          - one-time
          - one-time-per-user
          - unlimited
        description: |-
          * `one-time` - one-time
          * `one-time-per-user` - one-time-per-user
          * `unlimited` - unlimited
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountList'
          description: ''
    post:
      operationId: api_discounts_create
      description: API view set for Discounts
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/discounts/{parent_lookup_discount}/assignees/:
    get:
      operationId: api_discounts_assignees_list
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDiscountMetaList'
          description: ''
    post:
      operationId: api_discounts_assignees_create
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
  /api/discounts/{parent_lookup_discount}/assignees/{id}/:
    get:
      operationId: api_discounts_assignees_retrieve
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
    put:
      operationId: api_discounts_assignees_update
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
    patch:
      operationId: api_discounts_assignees_partial_update
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
    delete:
      operationId: api_discounts_assignees_destroy
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/discounts/{parent_lookup_discount}/products/:
    get:
      operationId: api_discounts_products_list
      description: API view set for Discounts
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountProductList'
          description: ''
    post:
      operationId: api_discounts_products_create
      description: API view set for Discounts
      parameters:
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
  /api/discounts/{parent_lookup_discount}/products/{id}/:
    get:
      operationId: api_discounts_products_retrieve
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
    put:
      operationId: api_discounts_products_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
    patch:
      operationId: api_discounts_products_partial_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscountProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscountProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscountProductRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
    delete:
      operationId: api_discounts_products_destroy
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/discounts/{parent_lookup_discount}/tiers/:
    get:
      operationId: api_discounts_tiers_list
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlexiblePriceTierList'
          description: ''
    post:
      operationId: api_discounts_tiers_create
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
  /api/discounts/{parent_lookup_discount}/tiers/{id}/:
    get:
      operationId: api_discounts_tiers_retrieve
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
    put:
      operationId: api_discounts_tiers_update
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
    patch:
      operationId: api_discounts_tiers_partial_update
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceTierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceTierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceTierRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
    delete:
      operationId: api_discounts_tiers_destroy
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/discounts/{parent_lookup_redeemed_discount}/redemptions/:
    get:
      operationId: api_discounts_redemptions_list
      description: API view set for Discount Redemptions
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountRedemptionList'
          description: ''
    post:
      operationId: api_discounts_redemptions_create
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
  /api/discounts/{parent_lookup_redeemed_discount}/redemptions/{id}/:
    get:
      operationId: api_discounts_redemptions_retrieve
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
    put:
      operationId: api_discounts_redemptions_update
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
    patch:
      operationId: api_discounts_redemptions_partial_update
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
    delete:
      operationId: api_discounts_redemptions_destroy
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/discounts/{id}/:
    get:
      operationId: api_discounts_retrieve
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: api_discounts_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: api_discounts_partial_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: api_discounts_destroy
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/discounts/create_batch/:
    post:
      operationId: api_discounts_create_batch_create
      description: |-
        Create a batch of codes. This is used in the staff-dashboard.
        POST arguments are the same as in generate_discount_code - look there
        for details.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/discounts/user/:
    get:
      operationId: api_discounts_user_list
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDiscountList'
          description: ''
    post:
      operationId: api_discounts_user_create
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
  /api/discounts/user/{id}/:
    get:
      operationId: api_discounts_user_retrieve
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
    put:
      operationId: api_discounts_user_update
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
    patch:
      operationId: api_discounts_user_partial_update
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDiscountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
    delete:
      operationId: api_discounts_user_destroy
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/enrollments/:
    get:
      operationId: api_enrollments_list
      description: API view set for user enrollments
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
    post:
      operationId: api_enrollments_create
      description: API view set for user enrollments
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
  /api/enrollments/{id}/:
    put:
      operationId: api_enrollments_update
      description: API view set for user enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
    patch:
      operationId: api_enrollments_partial_update
      description: API view set for user enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseRunEnrollmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseRunEnrollmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseRunEnrollmentRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
    delete:
      operationId: api_enrollments_destroy
      description: API view set for user enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
  /api/flexible_pricing/applications/:
    get:
      operationId: api_flexible_pricing_applications_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlexiblePriceList'
          description: ''
    post:
      operationId: api_flexible_pricing_applications_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
  /api/flexible_pricing/applications/{id}/:
    get:
      operationId: api_flexible_pricing_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
    put:
      operationId: api_flexible_pricing_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
    patch:
      operationId: api_flexible_pricing_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
    delete:
      operationId: api_flexible_pricing_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/flexible_pricing/applications_admin/:
    get:
      operationId: api_flexible_pricing_applications_admin_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlexiblePriceAdminList'
          description: ''
    post:
      operationId: api_flexible_pricing_applications_admin_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
  /api/flexible_pricing/applications_admin/{id}/:
    get:
      operationId: api_flexible_pricing_applications_admin_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
    put:
      operationId: api_flexible_pricing_applications_admin_update
      description: Update the flexible pricing status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
    patch:
      operationId: api_flexible_pricing_applications_admin_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceAdminRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
    delete:
      operationId: api_flexible_pricing_applications_admin_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/flexible_pricing/coursewares/:
    get:
      operationId: api_flexible_pricing_coursewares_list
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    post:
      operationId: api_flexible_pricing_coursewares_create
      tags:
      - api
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
  /api/flexible_pricing/coursewares/{id}/:
    get:
      operationId: api_flexible_pricing_coursewares_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    put:
      operationId: api_flexible_pricing_coursewares_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    patch:
      operationId: api_flexible_pricing_coursewares_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    delete:
      operationId: api_flexible_pricing_coursewares_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/flexible_pricing/exchange_rates/:
    get:
      operationId: api_flexible_pricing_exchange_rates_list
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    post:
      operationId: api_flexible_pricing_exchange_rates_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
  /api/flexible_pricing/exchange_rates/{id}/:
    get:
      operationId: api_flexible_pricing_exchange_rates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    put:
      operationId: api_flexible_pricing_exchange_rates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    patch:
      operationId: api_flexible_pricing_exchange_rates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurrencyExchangeRateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurrencyExchangeRateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurrencyExchangeRateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    delete:
      operationId: api_flexible_pricing_exchange_rates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/flexible_pricing/income_thresholds/:
    get:
      operationId: api_flexible_pricing_income_thresholds_list
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    post:
      operationId: api_flexible_pricing_income_thresholds_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
  /api/flexible_pricing/income_thresholds/{id}/:
    get:
      operationId: api_flexible_pricing_income_thresholds_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    put:
      operationId: api_flexible_pricing_income_thresholds_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    patch:
      operationId: api_flexible_pricing_income_thresholds_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountryIncomeThresholdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountryIncomeThresholdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountryIncomeThresholdRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    delete:
      operationId: api_flexible_pricing_income_thresholds_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/instructor/{id}/:
    get:
      operationId: api_instructor_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/login/email/:
    post:
      operationId: api_login_email_create
      description: Processes a request
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/login/password/:
    post:
      operationId: api_login_password_create
      description: Processes a request
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/orders/history/:
    get:
      operationId: api_orders_history_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderHistoryList'
          description: ''
  /api/orders/history/{id}/:
    get:
      operationId: api_orders_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderHistory'
          description: ''
  /api/orders/receipt/{id}/:
    get:
      operationId: api_orders_receipt_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/partnerschools/:
    get:
      operationId: api_partnerschools_list
      description: API view set for PartnerSchools
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerSchool'
          description: ''
  /api/partnerschools/{id}/:
    get:
      operationId: api_partnerschools_retrieve
      description: API view set for PartnerSchools
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this partner school.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerSchool'
          description: ''
  /api/password_reset/:
    post:
      operationId: api_password_reset_create
      description: Overrides the post method of a Djoser view to update session after
        successful password change
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomSendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomSendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomSendEmailResetRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSendEmailReset'
          description: ''
  /api/password_reset/confirm/:
    post:
      operationId: api_password_reset_confirm_create
      description: Overrides the post method of a Djoser view to update session after
        successful password change
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/all/:
    get:
      operationId: api_products_all_list
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_products_all_create
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/all/{id}/:
    get:
      operationId: api_products_all_retrieve
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_all_update
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_all_partial_update
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_all_destroy
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/program_enrollments/:
    get:
      operationId: api_program_enrollments_retrieve
      description: |-
        Returns a unified set of program and course enrollments for the current
        user.
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/program_enrollments/{id}/:
    delete:
      operationId: api_program_enrollments_destroy
      description: |-
        Unenroll the user from this program. This is simpler than the corresponding
        function for CourseRunEnrollments; edX doesn't really know what programs
        are so there's nothing to process there.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '204':
          description: No response body
  /api/programs/:
    get:
      operationId: api_programs_list
      description: API view set for Programs
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: readable_id
        schema:
          type: string
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProgramList'
          description: ''
  /api/programs/{id}/:
    get:
      operationId: api_programs_retrieve
      description: API view set for Programs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this program.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
          description: ''
  /api/records/program/{id}/:
    get:
      operationId: api_records_program_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/records/program/{id}/revoke/:
    post:
      operationId: api_records_program_revoke_create
      description: |-
        Disables sharing links for the learner's record. This only applies to the
        anonymous ones; shares sent to partner schools are always allowed once they
        are sent.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/records/program/{id}/share/:
    post:
      operationId: api_records_program_share_create
      description: |-
        Sets up a sharing link for the learner's record. Returns back the entire
        learner record.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/records/shared/{uuid}/:
    get:
      operationId: api_records_shared_retrieve
      description: |-
        Does mostly the same thing as get_learner_record, but sets context to skip
        the partner school and sharing information.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/register/confirm/:
    post:
      operationId: api_register_confirm_create
      description: Processes a request
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/register/details/:
    post:
      operationId: api_register_details_create
      description: Processes a request
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/register/email/:
    post:
      operationId: api_register_email_create
      description: Verify recaptcha response before proceeding
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/register/extra/:
    post:
      operationId: api_register_extra_create
      description: Processes a request
      tags:
      - api
      responses:
        '200':
          description: No response body
  /api/set_password/:
    post:
      operationId: api_set_password_create
      description: |-
        Overrides CustomDjoserAPIView.set_password to update the session after a successful
        password change. Without this explicit refresh, the user's session would be
        invalid and they would be logged out.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/user_search/:
    get:
      operationId: api_user_search_list
      description: |-
        Provides an API for listing system users. This is for the staff
        dashboard.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStaffDashboardUserList'
          description: ''
  /api/user_search/{id}/:
    get:
      operationId: api_user_search_retrieve
      description: |-
        Provides an API for listing system users. This is for the staff
        dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffDashboardUser'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: User retrieve viewsets
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicUser'
          description: ''
  /api/users/me:
    get:
      operationId: api_users_me_retrieve
      description: User retrieve and update viewsets for the current user
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_me_partial_update
      description: User retrieve and update viewsets for the current user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v0/baskets/:
    get:
      operationId: baskets_list
      description: API view set for Basket
      tags:
      - baskets
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Basket'
          description: ''
  /api/v0/baskets/{parent_lookup_basket}/discounts/:
    get:
      operationId: baskets_discounts_list
      description: Applied basket discounts
      parameters:
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - baskets
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasketDiscount'
          description: ''
  /api/v0/baskets/{parent_lookup_basket}/discounts/{id}/:
    get:
      operationId: baskets_discounts_retrieve
      description: Applied basket discounts
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - baskets
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketDiscount'
          description: ''
  /api/v0/baskets/{parent_lookup_basket}/items/:
    get:
      operationId: baskets_items_list
      description: API view set for BasketItem
      parameters:
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - baskets
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasketItem'
          description: ''
    post:
      operationId: baskets_items_create
      description: API view set for BasketItem
      parameters:
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - baskets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BasketItemRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketItem'
          description: ''
  /api/v0/baskets/{parent_lookup_basket}/items/{id}/:
    delete:
      operationId: baskets_items_destroy
      description: API view set for BasketItem
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: parent_lookup_basket
        schema:
          type: string
        required: true
      tags:
      - baskets
      responses:
        '204':
          description: No response body
  /api/v0/baskets/{username}/:
    get:
      operationId: baskets_retrieve
      description: API view set for Basket
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - baskets
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
          description: ''
  /api/v0/checkout/add_to_cart/:
    post:
      operationId: checkout_add_to_cart_create
      description: Add product to the cart
      tags:
      - checkout
      responses:
        '200':
          description: No response body
  /api/v0/checkout/cart/:
    get:
      operationId: checkout_cart_retrieve
      description: Returns the current cart, with the product info embedded.
      tags:
      - checkout
      responses:
        '200':
          description: No response body
  /api/v0/checkout/redeem_discount/:
    post:
      operationId: checkout_redeem_discount_create
      description: |-
        API call to redeem a discount. Discounts are attached to the basket so
        they can be attached at any time in the checkout process. Later on,
        they'll be converted to attach to the resulting Order (as Baskets are
        ephemeral).

        Discount application is subject to these rules:
        - The discount can't be flagged for use with flexible pricing.
        - If the discount is tied to a product, the product must already be in
          the basket.

        POST Args:
            - discount (str): Discount Code to apply

        Returns:
            - Success message on success
            - HTTP 406 if there's no basket yet
            - HTTP 404 if the discount isn't found
      tags:
      - checkout
      responses:
        '200':
          description: No response body
  /api/v0/checkout/start_checkout/:
    post:
      operationId: checkout_start_checkout_create
      description: |-
        API call to start the checkout process. This assembles the basket items
        into an Order with Lines for each item, applies the attached basket
        discounts, and then calls the payment gateway to prepare for payment.

        Returns:
            - JSON payload from the ol-django payment gateway app. The payment
              gateway returns data necessary to construct a form that will
              ultimately POST to the actual payment processor.
      tags:
      - checkout
      responses:
        '200':
          description: No response body
  /api/v0/discounts/:
    get:
      operationId: discounts_list
      description: API view set for Discounts
      parameters:
      - in: query
        name: is_redeemed
        schema:
          type: string
          enum:
          - 'no'
          - 'yes'
        description: |-
          * `yes` - yes
          * `no` - no
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: payment_type
        schema:
          type: string
          nullable: true
          enum:
          - customer-support
          - financial-assistance
          - legacy
          - marketing
          - sales
          - staff
        description: |-
          * `marketing` - marketing
          * `sales` - sales
          * `financial-assistance` - financial-assistance
          * `customer-support` - customer-support
          * `staff` - staff
          * `legacy` - legacy
      - in: query
        name: q
        schema:
          type: string
        description: q
      - in: query
        name: redemption_type
        schema:
          type: string
          enum:
          - one-time
          - one-time-per-user
          - unlimited
        description: |-
          * `one-time` - one-time
          * `one-time-per-user` - one-time-per-user
          * `unlimited` - unlimited
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountList'
          description: ''
    post:
      operationId: discounts_create
      description: API view set for Discounts
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/v0/discounts/{parent_lookup_discount}/assignees/:
    get:
      operationId: discounts_assignees_list
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDiscountMetaList'
          description: ''
    post:
      operationId: discounts_assignees_create
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
  /api/v0/discounts/{parent_lookup_discount}/assignees/{id}/:
    get:
      operationId: discounts_assignees_retrieve
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
    put:
      operationId: discounts_assignees_update
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
    patch:
      operationId: discounts_assignees_partial_update
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscountMeta'
          description: ''
    delete:
      operationId: discounts_assignees_destroy
      description: API view set for User Discounts. This one is for use within a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '204':
          description: No response body
  /api/v0/discounts/{parent_lookup_discount}/products/:
    get:
      operationId: discounts_products_list
      description: API view set for Discounts
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountProductList'
          description: ''
    post:
      operationId: discounts_products_create
      description: API view set for Discounts
      parameters:
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
  /api/v0/discounts/{parent_lookup_discount}/products/{id}/:
    get:
      operationId: discounts_products_retrieve
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
    put:
      operationId: discounts_products_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
    patch:
      operationId: discounts_products_partial_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscountProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscountProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscountProductRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProduct'
          description: ''
    delete:
      operationId: discounts_products_destroy
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount product.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '204':
          description: No response body
  /api/v0/discounts/{parent_lookup_discount}/tiers/:
    get:
      operationId: discounts_tiers_list
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlexiblePriceTierList'
          description: ''
    post:
      operationId: discounts_tiers_create
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
  /api/v0/discounts/{parent_lookup_discount}/tiers/{id}/:
    get:
      operationId: discounts_tiers_retrieve
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
    put:
      operationId: discounts_tiers_update
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceTierRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
    patch:
      operationId: discounts_tiers_partial_update
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceTierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceTierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceTierRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceTier'
          description: ''
    delete:
      operationId: discounts_tiers_destroy
      description: API view set for Flexible Pricing Tiers. This one is for use within
        a Discount.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price tier.
        required: true
      - in: path
        name: parent_lookup_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '204':
          description: No response body
  /api/v0/discounts/{parent_lookup_redeemed_discount}/redemptions/:
    get:
      operationId: discounts_redemptions_list
      description: API view set for Discount Redemptions
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountRedemptionList'
          description: ''
    post:
      operationId: discounts_redemptions_create
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
  /api/v0/discounts/{parent_lookup_redeemed_discount}/redemptions/{id}/:
    get:
      operationId: discounts_redemptions_retrieve
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
    put:
      operationId: discounts_redemptions_update
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
    patch:
      operationId: discounts_redemptions_partial_update
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountRedemption'
          description: ''
    delete:
      operationId: discounts_redemptions_destroy
      description: API view set for Discount Redemptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount redemption.
        required: true
      - in: path
        name: parent_lookup_redeemed_discount
        schema:
          type: string
        required: true
      tags:
      - discounts
      responses:
        '204':
          description: No response body
  /api/v0/discounts/{id}/:
    get:
      operationId: discounts_retrieve
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: discounts_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: discounts_partial_update
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: discounts_destroy
      description: API view set for Discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - discounts
      responses:
        '204':
          description: No response body
  /api/v0/discounts/create_batch/:
    post:
      operationId: discounts_create_batch_create
      description: |-
        Create a batch of codes. This is used in the staff-dashboard.
        POST arguments are the same as in generate_discount_code - look there
        for details.
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/v0/discounts/user/:
    get:
      operationId: discounts_user_list
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserDiscountList'
          description: ''
    post:
      operationId: discounts_user_create
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
  /api/v0/discounts/user/{id}/:
    get:
      operationId: discounts_user_retrieve
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - discounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
    put:
      operationId: discounts_user_update
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDiscountRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
    patch:
      operationId: discounts_user_partial_update
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDiscountRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDiscount'
          description: ''
    delete:
      operationId: discounts_user_destroy
      description: API view set for User Discounts. This one is for working with the
        set as a whole.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user discount.
        required: true
      tags:
      - discounts
      responses:
        '204':
          description: No response body
  /api/v0/flexible_pricing/applications/:
    get:
      operationId: flexible_pricing_applications_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlexiblePriceList'
          description: ''
    post:
      operationId: flexible_pricing_applications_create
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
  /api/v0/flexible_pricing/applications/{id}/:
    get:
      operationId: flexible_pricing_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
    put:
      operationId: flexible_pricing_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
    patch:
      operationId: flexible_pricing_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePrice'
          description: ''
    delete:
      operationId: flexible_pricing_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - flexible_pricing
      responses:
        '204':
          description: No response body
  /api/v0/flexible_pricing/applications_admin/:
    get:
      operationId: flexible_pricing_applications_admin_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlexiblePriceAdminList'
          description: ''
    post:
      operationId: flexible_pricing_applications_admin_create
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
  /api/v0/flexible_pricing/applications_admin/{id}/:
    get:
      operationId: flexible_pricing_applications_admin_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
    put:
      operationId: flexible_pricing_applications_admin_update
      description: Update the flexible pricing status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlexiblePriceAdminRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
    patch:
      operationId: flexible_pricing_applications_admin_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlexiblePriceAdminRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceAdmin'
          description: ''
    delete:
      operationId: flexible_pricing_applications_admin_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      responses:
        '204':
          description: No response body
  /api/v0/flexible_pricing/coursewares/:
    get:
      operationId: flexible_pricing_coursewares_list
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    post:
      operationId: flexible_pricing_coursewares_create
      tags:
      - flexible_pricing
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
  /api/v0/flexible_pricing/coursewares/{id}/:
    get:
      operationId: flexible_pricing_coursewares_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    put:
      operationId: flexible_pricing_coursewares_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    patch:
      operationId: flexible_pricing_coursewares_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlexiblePriceCoursewareAdmin'
          description: ''
    delete:
      operationId: flexible_pricing_coursewares_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flexible price.
        required: true
      tags:
      - flexible_pricing
      responses:
        '204':
          description: No response body
  /api/v0/flexible_pricing/exchange_rates/:
    get:
      operationId: flexible_pricing_exchange_rates_list
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    post:
      operationId: flexible_pricing_exchange_rates_create
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
  /api/v0/flexible_pricing/exchange_rates/{id}/:
    get:
      operationId: flexible_pricing_exchange_rates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    put:
      operationId: flexible_pricing_exchange_rates_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    patch:
      operationId: flexible_pricing_exchange_rates_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCurrencyExchangeRateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCurrencyExchangeRateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCurrencyExchangeRateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
          description: ''
    delete:
      operationId: flexible_pricing_exchange_rates_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this currency exchange rate.
        required: true
      tags:
      - flexible_pricing
      responses:
        '204':
          description: No response body
  /api/v0/flexible_pricing/income_thresholds/:
    get:
      operationId: flexible_pricing_income_thresholds_list
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    post:
      operationId: flexible_pricing_income_thresholds_create
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
  /api/v0/flexible_pricing/income_thresholds/{id}/:
    get:
      operationId: flexible_pricing_income_thresholds_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - flexible_pricing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    put:
      operationId: flexible_pricing_income_thresholds_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryIncomeThresholdRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    patch:
      operationId: flexible_pricing_income_thresholds_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - flexible_pricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountryIncomeThresholdRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountryIncomeThresholdRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountryIncomeThresholdRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryIncomeThreshold'
          description: ''
    delete:
      operationId: flexible_pricing_income_thresholds_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country income threshold.
        required: true
      tags:
      - flexible_pricing
      responses:
        '204':
          description: No response body
  /api/v0/orders/history/:
    get:
      operationId: orders_history_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - orders
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderHistoryList'
          description: ''
  /api/v0/orders/history/{id}/:
    get:
      operationId: orders_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - orders
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderHistory'
          description: ''
  /api/v0/products/:
    get:
      operationId: products_list
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /api/v0/products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v0/products/all/:
    get:
      operationId: products_all_list
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - name: l
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: o
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_all_create
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v0/products/all/{id}/:
    get:
      operationId: products_all_retrieve
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_all_update
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_all_partial_update
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_all_destroy
      description: |-
        This doesn't filter unenrollable products out, and adds name search for
        courseware object readable id. It's really for the staff dashboard.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      responses:
        '204':
          description: No response body
  /api/v1/course_runs/:
    get:
      operationId: course_runs_list
      description: API view set for CourseRuns
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: boolean
      tags:
      - course_runs
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseRunWithCourse'
          description: ''
  /api/v1/course_runs/{id}/:
    get:
      operationId: course_runs_retrieve
      description: API view set for CourseRuns
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course run.
        required: true
      tags:
      - course_runs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunWithCourse'
          description: ''
  /api/v1/courses/:
    get:
      operationId: courses_list
      description: API view set for Courses
      parameters:
      - in: query
        name: courserun_is_enrollable
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page__live
        schema:
          type: boolean
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: readable_id
        schema:
          type: string
      tags:
      - courses
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseWithCourseRunsList'
          description: ''
  /api/v1/courses/{id}/:
    get:
      operationId: courses_retrieve
      description: API view set for Courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - courses
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWithCourseRuns'
          description: ''
  /api/v1/departments/:
    get:
      operationId: departments_list
      description: API view set for Departments
      tags:
      - departments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentWithCount'
          description: ''
  /api/v1/departments/{id}/:
    get:
      operationId: departments_retrieve
      description: API view set for Departments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentWithCount'
          description: ''
  /api/v1/enrollments/:
    get:
      operationId: enrollments_list
      description: API view set for user enrollments
      tags:
      - enrollments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
    post:
      operationId: enrollments_create
      description: API view set for user enrollments
      tags:
      - enrollments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
  /api/v1/enrollments/{id}/:
    put:
      operationId: enrollments_update
      description: API view set for user enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - enrollments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseRunEnrollmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
    patch:
      operationId: enrollments_partial_update
      description: API view set for user enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - enrollments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseRunEnrollmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseRunEnrollmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseRunEnrollmentRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
    delete:
      operationId: enrollments_destroy
      description: API view set for user enrollments
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - enrollments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseRunEnrollment'
          description: ''
  /api/v1/partnerschools/:
    get:
      operationId: partnerschools_list
      description: API view set for PartnerSchools
      tags:
      - partnerschools
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartnerSchool'
          description: ''
  /api/v1/partnerschools/{id}/:
    get:
      operationId: partnerschools_retrieve
      description: API view set for PartnerSchools
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this partner school.
        required: true
      tags:
      - partnerschools
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerSchool'
          description: ''
  /api/v1/program_enrollments/:
    get:
      operationId: program_enrollments_retrieve
      description: |-
        Returns a unified set of program and course enrollments for the current
        user.
      tags:
      - program_enrollments
      responses:
        '200':
          description: No response body
  /api/v1/program_enrollments/{id}/:
    delete:
      operationId: program_enrollments_destroy
      description: |-
        Unenroll the user from this program. This is simpler than the corresponding
        function for CourseRunEnrollments; edX doesn't really know what programs
        are so there's nothing to process there.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - program_enrollments
      responses:
        '204':
          description: No response body
  /api/v1/programs/:
    get:
      operationId: programs_list
      description: API view set for Programs
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: readable_id
        schema:
          type: string
      tags:
      - programs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProgramList'
          description: ''
  /api/v1/programs/{id}/:
    get:
      operationId: programs_retrieve
      description: API view set for Programs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this program.
        required: true
      tags:
      - programs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
          description: ''
  /api/v2/courses/:
    get:
      operationId: courses_list_2
      description: API view set for Courses
      parameters:
      - in: query
        name: courserun_is_enrollable
        schema:
          type: boolean
        description: Course Run Is Enrollable
      - in: query
        name: id
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: live
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page__live
        schema:
          type: boolean
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: readable_id
        schema:
          type: string
      tags:
      - courses
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseWithCourseRunsList'
          description: ''
  /api/v2/courses/{id}/:
    get:
      operationId: courses_retrieve_2
      description: API view set for Courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - courses
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWithCourseRuns'
          description: ''
  /api/v2/departments/:
    get:
      operationId: departments_list_2
      description: API view set for Departments
      tags:
      - departments
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentWithCoursesAndPrograms'
          description: ''
  /api/v2/departments/{id}/:
    get:
      operationId: departments_retrieve_2
      description: API view set for Departments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this department.
        required: true
      tags:
      - departments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentWithCoursesAndPrograms'
          description: ''
  /api/v2/programs/:
    get:
      operationId: programs_list_2
      description: API viewset for Programs
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: page__live
        schema:
          type: boolean
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: readable_id
        schema:
          type: string
      tags:
      - programs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProgramList'
          description: ''
  /api/v2/programs/{id}/:
    get:
      operationId: programs_retrieve_2
      description: API viewset for Programs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this program.
        required: true
      tags:
      - programs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
          description: ''
  /cms/api/main/documents/:
    get:
      operationId: cms_api_main_documents_retrieve
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/documents/{id}/:
    get:
      operationId: cms_api_main_documents_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/documents/find/:
    get:
      operationId: cms_api_main_documents_find_retrieve
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/images/:
    get:
      operationId: cms_api_main_images_retrieve
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/images/{id}/:
    get:
      operationId: cms_api_main_images_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/images/find/:
    get:
      operationId: cms_api_main_images_find_retrieve
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/pages/:
    get:
      operationId: cms_api_main_pages_retrieve
      description: A clone of the default Wagtail admin API that additionally orders
        all responses by page title alphabetically
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/pages/{id}/:
    get:
      operationId: cms_api_main_pages_retrieve_2
      description: A clone of the default Wagtail admin API that additionally orders
        all responses by page title alphabetically
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/pages/{id}/action/{action_name}/:
    post:
      operationId: cms_api_main_pages_action_create
      description: A clone of the default Wagtail admin API that additionally orders
        all responses by page title alphabetically
      parameters:
      - in: path
        name: action_name
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /cms/api/main/pages/find/:
    get:
      operationId: cms_api_main_pages_find_retrieve
      description: A clone of the default Wagtail admin API that additionally orders
        all responses by page title alphabetically
      tags:
      - cms
      responses:
        '200':
          description: No response body
  /enrollments/:
    post:
      operationId: enrollments_create_2
      description: View to handle direct POST requests to enroll in a course run
      tags:
      - enrollments
      responses:
        '200':
          description: No response body
components:
  schemas:
    Basket:
      type: object
      description: Basket model serializer
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        basket_items:
          type: string
          readOnly: true
      required:
      - basket_items
      - id
      - user
    BasketDiscount:
      type: object
      description: BasketDiscount model serializer
      properties:
        redeemed_discount:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        redeemed_basket:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - redeemed_basket
      - redeemed_discount
    BasketItem:
      type: object
      description: BasketItem model serializer
      properties:
        basket:
          type: integer
        product:
          type: integer
        id:
          type: integer
          readOnly: true
      required:
      - basket
      - id
      - product
    BasketItemRequest:
      type: object
      description: BasketItem model serializer
      properties:
        basket:
          type: integer
        product:
          type: integer
      required:
      - basket
      - product
    BlankEnum:
      enum:
      - ''
    ChangeEmailRequestCreate:
      type: object
      description: Serializer for starting a user email change
      properties:
        new_email:
          type: string
          format: email
      required:
      - new_email
    ChangeEmailRequestCreateRequest:
      type: object
      description: Serializer for starting a user email change
      properties:
        new_email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - new_email
      - password
    ChangeEmailRequestUpdate:
      type: object
      description: Serializer for confirming a user email change
      properties:
        confirmed:
          type: boolean
      required:
      - confirmed
    CompanySizeEnum:
      enum:
      - '1'
      - '9'
      - '99'
      - '999'
      - '9999'
      - '10000'
      - '0'
      type: string
      description: |-
        * `1` - Small/Start-up (1+ employees)
        * `9` - Small/Home office (1-9 employees)
        * `99` - Small (10-99 employees)
        * `999` - Small to medium-sized (100-999 employees)
        * `9999` - Medium-sized (1000-9999 employees)
        * `10000` - Large Enterprise (10,000+ employees)
        * `0` - Other (N/A or Don't know)
      x-enum-descriptions:
      - Small/Start-up (1+ employees)
      - Small/Home office (1-9 employees)
      - Small (10-99 employees)
      - Small to medium-sized (100-999 employees)
      - Medium-sized (1000-9999 employees)
      - Large Enterprise (10,000+ employees)
      - Other (N/A or Don't know)
    CountryIncomeThreshold:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        country_code:
          type: string
          maxLength: 2
        income_threshold:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - country_code
      - id
      - income_threshold
    CountryIncomeThresholdRequest:
      type: object
      properties:
        country_code:
          type: string
          minLength: 1
          maxLength: 2
        income_threshold:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - country_code
      - income_threshold
    Course:
      type: object
      description: Course model serializer
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        readable_id:
          type: string
          pattern: ^[\w\-+:\.]+$
          maxLength: 255
        next_run_id:
          type: string
          readOnly: true
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          readOnly: true
        page:
          allOf:
          - $ref: '#/components/schemas/CoursePage'
          readOnly: true
        programs:
          type: string
          readOnly: true
      required:
      - departments
      - id
      - next_run_id
      - page
      - programs
      - readable_id
      - title
    CoursePage:
      type: object
      description: Course page model serializer
      properties:
        feature_image_src:
          type: string
          readOnly: true
        page_url:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        live:
          type: boolean
          readOnly: true
        length:
          type: string
          readOnly: true
        effort:
          type: string
          readOnly: true
        financial_assistance_form_url:
          type: string
          readOnly: true
        current_price:
          type: string
          readOnly: true
        instructors:
          type: string
          readOnly: true
      required:
      - current_price
      - description
      - effort
      - feature_image_src
      - financial_assistance_form_url
      - instructors
      - length
      - live
      - page_url
    CourseRequest:
      type: object
      description: Course model serializer
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        readable_id:
          type: string
          minLength: 1
          pattern: ^[\w\-+:\.]+$
          maxLength: 255
      required:
      - readable_id
      - title
    CourseRun:
      type: object
      description: CourseRun model serializer
      properties:
        title:
          type: string
          description: The title of the course. This value is synced automatically
            with edX studio.
          maxLength: 255
        start_date:
          type: string
          format: date-time
          nullable: true
          description: The day the course begins. This value is synced automatically
            with edX studio.
        end_date:
          type: string
          format: date-time
          nullable: true
          description: The last day the course is active. This value is synced automatically
            with edX studio.
        enrollment_start:
          type: string
          format: date-time
          nullable: true
          description: The first day students can enroll. This value is synced automatically
            with edX studio.
        enrollment_end:
          type: string
          format: date-time
          nullable: true
          description: The last day students can enroll. This value is synced automatically
            with edX studio.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: The date beyond which the learner should not see link to this
            course run on their dashboard.
        courseware_url:
          type: string
          readOnly: true
        courseware_id:
          type: string
          maxLength: 255
        certificate_available_date:
          type: string
          format: date-time
          nullable: true
          description: The day certificates should be available to users. This value
            is synced automatically with edX studio.
        upgrade_deadline:
          type: string
          format: date-time
          nullable: true
          description: The date beyond which the learner can not enroll in paid course
            mode.
        is_upgradable:
          type: string
          readOnly: true
        is_enrollable:
          type: string
          readOnly: true
        is_archived:
          type: string
          readOnly: true
        is_self_paced:
          type: boolean
        run_tag:
          type: string
          description: 'A string that identifies the set of runs that this run belongs
            to (example: ''R2'')'
          maxLength: 100
        id:
          type: integer
          readOnly: true
        live:
          type: boolean
        course_number:
          type: string
          readOnly: true
        products:
          type: array
          items:
            type: string
          readOnly: true
        approved_flexible_price_exists:
          type: string
          readOnly: true
      required:
      - approved_flexible_price_exists
      - course_number
      - courseware_id
      - courseware_url
      - id
      - is_archived
      - is_enrollable
      - is_upgradable
      - products
      - run_tag
      - title
    CourseRunEnrollment:
      type: object
      description: CourseRunEnrollment model serializer
      properties:
        run:
          allOf:
          - $ref: '#/components/schemas/CourseRunWithCourse'
          readOnly: true
        id:
          type: integer
          readOnly: true
        edx_emails_subscription:
          type: boolean
        certificate:
          type: string
          readOnly: true
        enrollment_mode:
          allOf:
          - $ref: '#/components/schemas/EnrollmentModeEnum'
          readOnly: true
        approved_flexible_price_exists:
          type: string
          readOnly: true
        grades:
          type: string
          readOnly: true
      required:
      - approved_flexible_price_exists
      - certificate
      - enrollment_mode
      - grades
      - id
      - run
    CourseRunEnrollmentRequest:
      type: object
      description: CourseRunEnrollment model serializer
      properties:
        edx_emails_subscription:
          type: boolean
        run_id:
          type: integer
          writeOnly: true
      required:
      - run_id
    CourseRunWithCourse:
      type: object
      description: CourseRun model serializer - also serializes the parent Course.
      properties:
        title:
          type: string
          description: The title of the course. This value is synced automatically
            with edX studio.
          maxLength: 255
        start_date:
          type: string
          format: date-time
          nullable: true
          description: The day the course begins. This value is synced automatically
            with edX studio.
        end_date:
          type: string
          format: date-time
          nullable: true
          description: The last day the course is active. This value is synced automatically
            with edX studio.
        enrollment_start:
          type: string
          format: date-time
          nullable: true
          description: The first day students can enroll. This value is synced automatically
            with edX studio.
        enrollment_end:
          type: string
          format: date-time
          nullable: true
          description: The last day students can enroll. This value is synced automatically
            with edX studio.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: The date beyond which the learner should not see link to this
            course run on their dashboard.
        courseware_url:
          type: string
          readOnly: true
        courseware_id:
          type: string
          maxLength: 255
        certificate_available_date:
          type: string
          format: date-time
          nullable: true
          description: The day certificates should be available to users. This value
            is synced automatically with edX studio.
        upgrade_deadline:
          type: string
          format: date-time
          nullable: true
          description: The date beyond which the learner can not enroll in paid course
            mode.
        is_upgradable:
          type: string
          readOnly: true
        is_enrollable:
          type: string
          readOnly: true
        is_archived:
          type: string
          readOnly: true
        is_self_paced:
          type: boolean
        run_tag:
          type: string
          description: 'A string that identifies the set of runs that this run belongs
            to (example: ''R2'')'
          maxLength: 100
        id:
          type: integer
          readOnly: true
        live:
          type: boolean
        course_number:
          type: string
          readOnly: true
        products:
          type: array
          items:
            type: string
          readOnly: true
        approved_flexible_price_exists:
          type: string
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/Course'
          readOnly: true
      required:
      - approved_flexible_price_exists
      - course
      - course_number
      - courseware_id
      - courseware_url
      - id
      - is_archived
      - is_enrollable
      - is_upgradable
      - products
      - run_tag
      - title
    CourseRunWithCourseRequest:
      type: object
      description: CourseRun model serializer - also serializes the parent Course.
      properties:
        title:
          type: string
          minLength: 1
          description: The title of the course. This value is synced automatically
            with edX studio.
          maxLength: 255
        start_date:
          type: string
          format: date-time
          nullable: true
          description: The day the course begins. This value is synced automatically
            with edX studio.
        end_date:
          type: string
          format: date-time
          nullable: true
          description: The last day the course is active. This value is synced automatically
            with edX studio.
        enrollment_start:
          type: string
          format: date-time
          nullable: true
          description: The first day students can enroll. This value is synced automatically
            with edX studio.
        enrollment_end:
          type: string
          format: date-time
          nullable: true
          description: The last day students can enroll. This value is synced automatically
            with edX studio.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: The date beyond which the learner should not see link to this
            course run on their dashboard.
        courseware_id:
          type: string
          minLength: 1
          maxLength: 255
        certificate_available_date:
          type: string
          format: date-time
          nullable: true
          description: The day certificates should be available to users. This value
            is synced automatically with edX studio.
        upgrade_deadline:
          type: string
          format: date-time
          nullable: true
          description: The date beyond which the learner can not enroll in paid course
            mode.
        is_self_paced:
          type: boolean
        run_tag:
          type: string
          minLength: 1
          description: 'A string that identifies the set of runs that this run belongs
            to (example: ''R2'')'
          maxLength: 100
        live:
          type: boolean
      required:
      - courseware_id
      - run_tag
      - title
    CourseWithCourseRuns:
      type: object
      description: Course model serializer - also serializes child course runs
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        readable_id:
          type: string
          pattern: ^[\w\-+:\.]+$
          maxLength: 255
        next_run_id:
          type: string
          readOnly: true
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          readOnly: true
        page:
          allOf:
          - $ref: '#/components/schemas/CoursePage'
          readOnly: true
        programs:
          type: string
          readOnly: true
        courseruns:
          type: array
          items:
            $ref: '#/components/schemas/CourseRun'
          readOnly: true
      required:
      - courseruns
      - departments
      - id
      - next_run_id
      - page
      - programs
      - readable_id
      - title
    CurrencyExchangeRate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        currency_code:
          type: string
          maxLength: 3
        exchange_rate:
          type: number
          format: double
      required:
      - currency_code
      - exchange_rate
      - id
    CurrencyExchangeRateRequest:
      type: object
      properties:
        currency_code:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: number
          format: double
      required:
      - currency_code
      - exchange_rate
    CustomSendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    CustomSendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    Department:
      type: object
      description: Department model serializer
      properties:
        name:
          type: string
          maxLength: 128
      required:
      - name
    DepartmentRequest:
      type: object
      description: Department model serializer
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - name
    DepartmentWithCount:
      type: object
      description: CourseRun model serializer that includes the number of courses
        and programs associated with each departments
      properties:
        name:
          type: string
          maxLength: 128
        courses:
          type: integer
        programs:
          type: integer
      required:
      - courses
      - name
      - programs
    DepartmentWithCoursesAndPrograms:
      type: object
      description: Department model serializer that includes the number of courses
        and programs associated with each
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        slug:
          type: string
          maxLength: 128
          pattern: ^[-a-zA-Z0-9_]+$
        course_ids:
          type: string
          readOnly: true
        program_ids:
          type: string
          readOnly: true
      required:
      - course_ids
      - id
      - name
      - program_ids
      - slug
    Discount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        automatic:
          type: boolean
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        redemption_type:
          $ref: '#/components/schemas/RedemptionTypeEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        discount_code:
          type: string
          maxLength: 100
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_redeemed:
          type: string
          readOnly: true
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
      required:
      - amount
      - discount_code
      - discount_type
      - id
      - is_redeemed
      - redemption_type
    DiscountProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        discount:
          $ref: '#/components/schemas/Discount'
        product:
          $ref: '#/components/schemas/Product'
      required:
      - discount
      - id
      - product
    DiscountProductRequest:
      type: object
      properties:
        discount:
          $ref: '#/components/schemas/DiscountRequest'
        product:
          $ref: '#/components/schemas/ProductRequest'
      required:
      - discount
      - product
    DiscountRedemption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        redemption_date:
          type: string
          format: date-time
          readOnly: true
        redeemed_by:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        redeemed_discount:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        redeemed_order:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - id
      - redeemed_by
      - redeemed_discount
      - redeemed_order
      - redemption_date
    DiscountRequest:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        automatic:
          type: boolean
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        redemption_type:
          $ref: '#/components/schemas/RedemptionTypeEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        discount_code:
          type: string
          minLength: 1
          maxLength: 100
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
      required:
      - amount
      - discount_code
      - discount_type
      - redemption_type
    DiscountTypeEnum:
      enum:
      - percent-off
      - dollars-off
      - fixed-price
      type: string
      description: |-
        * `percent-off` - percent-off
        * `dollars-off` - dollars-off
        * `fixed-price` - fixed-price
      x-enum-descriptions:
      - percent-off
      - dollars-off
      - fixed-price
    EnrollmentModeEnum:
      enum:
      - audit
      - verified
      type: string
      description: |-
        * `audit` - audit
        * `verified` - verified
      x-enum-descriptions:
      - audit
      - verified
    FlexiblePrice:
      type: object
      description: Serializer for flexible price requests
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        income_usd:
          type: number
          format: double
          nullable: true
        original_income:
          type: number
          format: double
          nullable: true
        original_currency:
          type: string
          nullable: true
          maxLength: 10
        country_of_income:
          type: string
          nullable: true
          maxLength: 100
        date_exchange_rate:
          type: string
          format: date-time
          nullable: true
        date_documents_sent:
          type: string
          format: date
          nullable: true
        justification:
          type: string
          nullable: true
        country_of_residence:
          type: string
      required:
      - id
      - user
    FlexiblePriceAdmin:
      type: object
      description: Serializer for Financial Assistance Requests
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        country_of_income:
          type: string
          nullable: true
          maxLength: 100
        date_exchange_rate:
          type: string
          format: date-time
          nullable: true
        date_documents_sent:
          type: string
          format: date
          nullable: true
        justification:
          type: string
          nullable: true
        country_of_residence:
          type: string
        courseware:
          type: string
          readOnly: true
        discount:
          type: string
          readOnly: true
        applicable_discounts:
          type: string
          readOnly: true
        income:
          type: string
          readOnly: true
      required:
      - applicable_discounts
      - courseware
      - discount
      - id
      - income
      - user
    FlexiblePriceAdminRequest:
      type: object
      description: Serializer for Financial Assistance Requests
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        country_of_income:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        date_exchange_rate:
          type: string
          format: date-time
          nullable: true
        date_documents_sent:
          type: string
          format: date
          nullable: true
        justification:
          type: string
          nullable: true
        country_of_residence:
          type: string
    FlexiblePriceCoursewareAdmin:
      type: object
      description: Serializer for coursewares in flexible price requests
      properties:
        id:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        readable_id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      required:
      - id
      - readable_id
      - title
      - type
    FlexiblePriceRequest:
      type: object
      description: Serializer for flexible price requests
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        income_usd:
          type: number
          format: double
          nullable: true
        original_income:
          type: number
          format: double
          nullable: true
        original_currency:
          type: string
          nullable: true
          minLength: 1
          maxLength: 10
        country_of_income:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        date_exchange_rate:
          type: string
          format: date-time
          nullable: true
        date_documents_sent:
          type: string
          format: date
          nullable: true
        justification:
          type: string
          nullable: true
        country_of_residence:
          type: string
    FlexiblePriceTier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        courseware_object:
          type: string
          readOnly: true
        discount:
          type: integer
        current:
          type: boolean
        income_threshold_usd:
          type: number
          format: double
      required:
      - courseware_object
      - discount
      - id
      - income_threshold_usd
    FlexiblePriceTierRequest:
      type: object
      properties:
        discount:
          type: integer
        current:
          type: boolean
        income_threshold_usd:
          type: number
          format: double
      required:
      - discount
      - income_threshold_usd
    GenderEnum:
      enum:
      - m
      - f
      - t
      - nb
      - o
      type: string
      description: |-
        * `m` - Male
        * `f` - Female
        * `t` - Transgender
        * `nb` - Non-binary/non-conforming
        * `o` - Other/Prefer Not to Say
      x-enum-descriptions:
      - Male
      - Female
      - Transgender
      - Non-binary/non-conforming
      - Other/Prefer Not to Say
    HighestEducationEnum:
      enum:
      - Doctorate
      - Master's or professional degree
      - Bachelor's degree
      - Associate degree
      - Secondary/high school
      - Junior secondary/junior high/middle school
      - Elementary/primary school
      - No formal education
      - Other education
      description: |-
        * `None` - ----
        * `Doctorate` - Doctorate
        * `Master's or professional degree` - Master's or professional degree
        * `Bachelor's degree` - Bachelor's degree
        * `Associate degree` - Associate degree
        * `Secondary/high school` - Secondary/high school
        * `Junior secondary/junior high/middle school` - Junior secondary/junior high/middle school
        * `Elementary/primary school` - Elementary/primary school
        * `No formal education` - No formal education
        * `Other education` - Other education
      x-enum-descriptions:
      - Doctorate
      - Master's or professional degree
      - Bachelor's degree
      - Associate degree
      - Secondary/high school
      - Junior secondary/junior high/middle school
      - Elementary/primary school
      - No formal education
      - Other education
    LegalAddress:
      type: object
      description: Serializer for legal address
      properties:
        first_name:
          type: string
          maxLength: 60
        last_name:
          type: string
          maxLength: 60
        country:
          type: string
          maxLength: 2
        state:
          type: string
          nullable: true
          maxLength: 10
      required:
      - country
      - first_name
      - last_name
    LegalAddressRequest:
      type: object
      description: Serializer for legal address
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 60
        last_name:
          type: string
          minLength: 1
          maxLength: 60
        country:
          type: string
          minLength: 1
          maxLength: 2
        state:
          type: string
          nullable: true
          maxLength: 10
      required:
      - country
      - first_name
      - last_name
    Line:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        item_description:
          type: string
          readOnly: true
        content_type:
          type: string
          readOnly: true
        unit_price:
          type: string
          readOnly: true
        total_price:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        product:
          type: string
          readOnly: true
      required:
      - content_type
      - id
      - item_description
      - product
      - quantity
      - total_price
      - unit_price
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        automatic:
          type: boolean
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        redemption_type:
          $ref: '#/components/schemas/RedemptionTypeEnum'
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        discount_code:
          type: string
          maxLength: 100
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
        is_bulk:
          type: boolean
      required:
      - amount
      - created_on
      - discount_code
      - discount_type
      - id
      - redemption_type
      - updated_on
    NestedRequest:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        automatic:
          type: boolean
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        redemption_type:
          $ref: '#/components/schemas/RedemptionTypeEnum'
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        discount_code:
          type: string
          minLength: 1
          maxLength: 100
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
        is_bulk:
          type: boolean
      required:
      - amount
      - discount_code
      - discount_type
      - redemption_type
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        purchaser:
          type: string
          readOnly: true
        total_price_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        lines:
          type: string
          readOnly: true
        discounts:
          type: string
          readOnly: true
        refunds:
          type: string
          readOnly: true
        reference_number:
          type: string
          nullable: true
          maxLength: 255
        created_on:
          type: string
          format: date-time
          readOnly: true
        transactions:
          type: string
          readOnly: true
        street_address:
          type: string
          readOnly: true
      required:
      - created_on
      - discounts
      - id
      - lines
      - purchaser
      - refunds
      - state
      - street_address
      - total_price_paid
      - transactions
    OrderHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        state:
          $ref: '#/components/schemas/StateEnum'
        reference_number:
          type: string
          nullable: true
          maxLength: 255
        purchaser:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        total_price_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Line'
        created_on:
          type: string
          format: date-time
          readOnly: true
        titles:
          type: string
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - id
      - lines
      - purchaser
      - state
      - titles
      - total_price_paid
      - updated_on
    PaginatedCourseWithCourseRunsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CourseWithCourseRuns'
    PaginatedDiscountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
    PaginatedDiscountProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiscountProduct'
    PaginatedDiscountRedemptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiscountRedemption'
    PaginatedFlexiblePriceAdminList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlexiblePriceAdmin'
    PaginatedFlexiblePriceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlexiblePrice'
    PaginatedFlexiblePriceTierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlexiblePriceTier'
    PaginatedOrderHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderHistory'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProgramList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Program'
    PaginatedStaffDashboardUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffDashboardUser'
    PaginatedUserDiscountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDiscount'
    PaginatedUserDiscountMetaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=400&l=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?o=200&l=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDiscountMeta'
    PartnerSchool:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        email:
          type: string
      required:
      - created_on
      - email
      - id
      - name
      - updated_on
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PasswordResetConfirmRetypeRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
        re_new_password:
          type: string
          minLength: 1
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PatchedChangeEmailRequestUpdateRequest:
      type: object
      description: Serializer for confirming a user email change
      properties:
        confirmed:
          type: boolean
    PatchedCountryIncomeThresholdRequest:
      type: object
      properties:
        country_code:
          type: string
          minLength: 1
          maxLength: 2
        income_threshold:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedCourseRunEnrollmentRequest:
      type: object
      description: CourseRunEnrollment model serializer
      properties:
        edx_emails_subscription:
          type: boolean
        run_id:
          type: integer
          writeOnly: true
    PatchedCurrencyExchangeRateRequest:
      type: object
      properties:
        currency_code:
          type: string
          minLength: 1
          maxLength: 3
        exchange_rate:
          type: number
          format: double
    PatchedDiscountProductRequest:
      type: object
      properties:
        discount:
          $ref: '#/components/schemas/DiscountRequest'
        product:
          $ref: '#/components/schemas/ProductRequest'
    PatchedDiscountRequest:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,5})?$
        automatic:
          type: boolean
        discount_type:
          $ref: '#/components/schemas/DiscountTypeEnum'
        redemption_type:
          $ref: '#/components/schemas/RedemptionTypeEnum'
        max_redemptions:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        discount_code:
          type: string
          minLength: 1
          maxLength: 100
        payment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        activation_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable before this
            date.
        expiration_date:
          type: string
          format: date-time
          nullable: true
          description: If set, this discount code will not be redeemable after this
            date.
    PatchedFlexiblePriceAdminRequest:
      type: object
      description: Serializer for Financial Assistance Requests
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        country_of_income:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        date_exchange_rate:
          type: string
          format: date-time
          nullable: true
        date_documents_sent:
          type: string
          format: date
          nullable: true
        justification:
          type: string
          nullable: true
        country_of_residence:
          type: string
    PatchedFlexiblePriceRequest:
      type: object
      description: Serializer for flexible price requests
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        income_usd:
          type: number
          format: double
          nullable: true
        original_income:
          type: number
          format: double
          nullable: true
        original_currency:
          type: string
          nullable: true
          minLength: 1
          maxLength: 10
        country_of_income:
          type: string
          nullable: true
          minLength: 1
          maxLength: 100
        date_exchange_rate:
          type: string
          format: date-time
          nullable: true
        date_documents_sent:
          type: string
          format: date
          nullable: true
        justification:
          type: string
          nullable: true
        country_of_residence:
          type: string
    PatchedFlexiblePriceTierRequest:
      type: object
      properties:
        discount:
          type: integer
        current:
          type: boolean
        income_threshold_usd:
          type: number
          format: double
    PatchedProductRequest:
      type: object
      description: Simple serializer for Product without related purchasable objects
      properties:
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
        description:
          type: string
          minLength: 1
        is_active:
          type: boolean
          description: Controls visibility of the product in the app.
    PatchedUserDiscountRequest:
      type: object
      properties:
        discount:
          type: integer
        user:
          type: integer
    PatchedUserRequest:
      type: object
      description: Serializer for users
      properties:
        username:
          type: string
          minLength: 1
        name:
          type: string
          maxLength: 255
        email:
          type: string
        password:
          type: string
          writeOnly: true
          minLength: 1
        legal_address:
          allOf:
          - $ref: '#/components/schemas/LegalAddressRequest'
          nullable: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfileRequest'
          nullable: true
        is_active:
          type: boolean
          default: true
    PaymentTypeEnum:
      enum:
      - marketing
      - sales
      - financial-assistance
      - customer-support
      - staff
      - legacy
      type: string
      description: |-
        * `marketing` - marketing
        * `sales` - sales
        * `financial-assistance` - financial-assistance
        * `customer-support` - customer-support
        * `staff` - staff
        * `legacy` - legacy
      x-enum-descriptions:
      - marketing
      - sales
      - financial-assistance
      - customer-support
      - staff
      - legacy
    Product:
      type: object
      description: Simple serializer for Product without related purchasable objects
      properties:
        id:
          type: integer
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
        description:
          type: string
        is_active:
          type: boolean
          description: Controls visibility of the product in the app.
        purchasable_object:
          type: string
          readOnly: true
      required:
      - description
      - id
      - price
      - purchasable_object
    ProductRequest:
      type: object
      description: Simple serializer for Product without related purchasable objects
      properties:
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,5}(?:\.\d{0,2})?$
        description:
          type: string
          minLength: 1
        is_active:
          type: boolean
          description: Controls visibility of the product in the app.
      required:
      - description
      - price
    Program:
      type: object
      description: Program model serializer
      properties:
        title:
          type: string
          maxLength: 255
        readable_id:
          type: string
          pattern: ^[\w\-+:\.]+$
          maxLength: 255
        id:
          type: integer
          readOnly: true
        courses:
          type: string
          readOnly: true
        requirements:
          type: string
          readOnly: true
        req_tree:
          type: string
          readOnly: true
        page:
          type: string
          readOnly: true
        program_type:
          type: string
          nullable: true
          maxLength: 255
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          readOnly: true
        live:
          type: boolean
      required:
      - courses
      - departments
      - id
      - page
      - readable_id
      - req_tree
      - requirements
      - title
    PublicUser:
      type: object
      description: Serializer for public user data
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 30
        name:
          type: string
          maxLength: 255
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - id
      - updated_on
      - username
    RedemptionTypeEnum:
      enum:
      - one-time
      - one-time-per-user
      - unlimited
      type: string
      description: |-
        * `one-time` - one-time
        * `one-time-per-user` - one-time-per-user
        * `unlimited` - unlimited
      x-enum-descriptions:
      - one-time
      - one-time-per-user
      - unlimited
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetPasswordRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
    StaffDashboardUser:
      type: object
      description: Serializer for data we care about in the staff dashboard
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 30
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        legal_address:
          allOf:
          - $ref: '#/components/schemas/LegalAddress'
          nullable: true
        is_staff:
          type: boolean
          description: The user can access the admin site
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - email
      - id
      - legal_address
      - username
    StateEnum:
      enum:
      - pending
      - fulfilled
      - canceled
      - declined
      - errored
      - refunded
      - review
      - partially_refunded
      type: string
      description: |-
        * `pending` - Pending
        * `fulfilled` - Fulfilled
        * `canceled` - Canceled
        * `declined` - Declined
        * `errored` - Errored
        * `refunded` - Refunded
        * `review` - Review
        * `partially_refunded` - Partially Refunded
      x-enum-descriptions:
      - Pending
      - Fulfilled
      - Canceled
      - Declined
      - Errored
      - Refunded
      - Review
      - Partially Refunded
    StatusEnum:
      enum:
      - approved
      - auto-approved
      - created
      - pending-manual-approval
      - denied
      - reset
      type: string
      description: |-
        * `approved` - approved
        * `auto-approved` - auto-approved
        * `created` - created
        * `pending-manual-approval` - pending-manual-approval
        * `denied` - denied
        * `reset` - reset
      x-enum-descriptions:
      - approved
      - auto-approved
      - created
      - pending-manual-approval
      - denied
      - reset
    User:
      type: object
      description: Serializer for users
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        name:
          type: string
          maxLength: 255
        email:
          type: string
        legal_address:
          allOf:
          - $ref: '#/components/schemas/LegalAddress'
          nullable: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          nullable: true
        is_anonymous:
          type: string
          readOnly: true
        is_authenticated:
          type: string
          readOnly: true
        is_editor:
          type: boolean
          description: Returns True if the user has editor permissions for the CMS
          readOnly: true
        is_staff:
          type: boolean
          readOnly: true
          description: The user can access the admin site
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        grants:
          type: string
          readOnly: true
        is_active:
          type: boolean
          default: true
      required:
      - created_on
      - grants
      - id
      - is_anonymous
      - is_authenticated
      - is_editor
      - is_staff
      - is_superuser
      - legal_address
      - updated_on
    UserDiscount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        discount:
          type: integer
        user:
          type: integer
      required:
      - discount
      - id
      - user
    UserDiscountMeta:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        discount:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - discount
      - id
      - user
    UserDiscountRequest:
      type: object
      properties:
        discount:
          type: integer
        user:
          type: integer
      required:
      - discount
      - user
    UserProfile:
      type: object
      description: Serializer for profile
      properties:
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        year_of_birth:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        addl_field_flag:
          type: boolean
          description: Flags if we've asked the user for additional information
        company:
          type: string
          nullable: true
          maxLength: 128
        job_title:
          type: string
          nullable: true
          maxLength: 128
        industry:
          type: string
          nullable: true
          maxLength: 60
        job_function:
          type: string
          nullable: true
          maxLength: 60
        company_size:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CompanySizeEnum'
          - $ref: '#/components/schemas/NullEnum'
        years_experience:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/YearsExperienceEnum'
          - $ref: '#/components/schemas/NullEnum'
        leadership_level:
          type: string
          nullable: true
          maxLength: 60
        highest_education:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/HighestEducationEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        type_is_student:
          type: boolean
          nullable: true
          description: The learner identifies as type Student
        type_is_professional:
          type: boolean
          nullable: true
          description: The learner identifies as type Professional
        type_is_educator:
          type: boolean
          nullable: true
          description: The learner identifies as type Educator
        type_is_other:
          type: boolean
          nullable: true
          description: The learner identifies as type Other (not professional, student,
            or educator)
    UserProfileRequest:
      type: object
      description: Serializer for profile
      properties:
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        year_of_birth:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        addl_field_flag:
          type: boolean
          description: Flags if we've asked the user for additional information
        company:
          type: string
          nullable: true
          maxLength: 128
        job_title:
          type: string
          nullable: true
          maxLength: 128
        industry:
          type: string
          nullable: true
          maxLength: 60
        job_function:
          type: string
          nullable: true
          maxLength: 60
        company_size:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CompanySizeEnum'
          - $ref: '#/components/schemas/NullEnum'
        years_experience:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/YearsExperienceEnum'
          - $ref: '#/components/schemas/NullEnum'
        leadership_level:
          type: string
          nullable: true
          maxLength: 60
        highest_education:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/HighestEducationEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        type_is_student:
          type: boolean
          nullable: true
          description: The learner identifies as type Student
        type_is_professional:
          type: boolean
          nullable: true
          description: The learner identifies as type Professional
        type_is_educator:
          type: boolean
          nullable: true
          description: The learner identifies as type Educator
        type_is_other:
          type: boolean
          nullable: true
          description: The learner identifies as type Other (not professional, student,
            or educator)
    UserRequest:
      type: object
      description: Serializer for users
      properties:
        username:
          type: string
          minLength: 1
        name:
          type: string
          maxLength: 255
        email:
          type: string
        password:
          type: string
          writeOnly: true
          minLength: 1
        legal_address:
          allOf:
          - $ref: '#/components/schemas/LegalAddressRequest'
          nullable: true
        user_profile:
          allOf:
          - $ref: '#/components/schemas/UserProfileRequest'
          nullable: true
        is_active:
          type: boolean
          default: true
      required:
      - legal_address
    YearsExperienceEnum:
      enum:
      - '2'
      - '5'
      - '10'
      - '15'
      - '20'
      - '21'
      - '0'
      type: string
      description: |-
        * `2` - Less than 2 years
        * `5` - 2-5 years
        * `10` - 6 - 10 years
        * `15` - 11 - 15 years
        * `20` - 16 - 20 years
        * `21` - More than 20 years
        * `0` - Prefer not to say
      x-enum-descriptions:
      - Less than 2 years
      - 2-5 years
      - 6 - 10 years
      - 11 - 15 years
      - 16 - 20 years
      - More than 20 years
      - Prefer not to say
