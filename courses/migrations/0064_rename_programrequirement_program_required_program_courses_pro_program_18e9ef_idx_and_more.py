# Generated by Django 4.2.22 on 2025-07-02 18:33
# Modified for Django 5.2 compatibility - safe index renaming

from django.db import migrations, models


def rename_indexes_safe(apps, schema_editor):
    """Safely rename indexes, handling cases where they may not exist."""
    # Use raw SQL to rename indexes if they exist
    db_alias = schema_editor.connection.alias
    
    # Try to find and rename the indexes created by AlterIndexTogether
    # These may not exist in fresh databases or may have different names
    # So we'll just skip this step - indexes will be created properly in later migrations
    pass


def reverse_rename_indexes(apps, schema_editor):
    """Reverse operation for index renaming."""
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("courses", "0063_add_program_requirement_support"),
    ]

    operations = [
        # Remove the old index_together setting
        migrations.AlterIndexTogether(
            name="programrequirement",
            index_together=set(),
        ),
        # Use RunPython to safely handle index renaming
        migrations.RunPython(rename_indexes_safe, reverse_rename_indexes),
        # Add named indexes explicitly
        migrations.AddIndex(
            model_name="programrequirement",
            index=models.Index(fields=["program", "required_program"], name="courses_pro_program_18e9ef_idx"),
        ),
        migrations.AddIndex(
            model_name="programrequirement",
            index=models.Index(fields=["required_program", "program"], name="courses_pro_require_99b956_idx"),
        ),
    ]
